import {
  __commonJS
} from "./chunk-AC2VUBZ6.js";

// node_modules/bootstrap/dist/js/bootstrap.bundle.min.js
var require_bootstrap_bundle_min = __commonJS({
  "node_modules/bootstrap/dist/js/bootstrap.bundle.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).bootstrap = e();
    }(exports, function() {
      "use strict";
      const t = (t2) => {
        do {
          t2 += Math.floor(1e6 * Math.random());
        } while (document.getElementById(t2));
        return t2;
      }, e = (t2) => {
        let e2 = t2.getAttribute("data-bs-target");
        if (!e2 || "#" === e2) {
          let i2 = t2.getAttribute("href");
          if (!i2 || !i2.includes("#") && !i2.startsWith("."))
            return null;
          i2.includes("#") && !i2.startsWith("#") && (i2 = "#" + i2.split("#")[1]), e2 = i2 && "#" !== i2 ? i2.trim() : null;
        }
        return e2;
      }, i = (t2) => {
        const i2 = e(t2);
        return i2 && document.querySelector(i2) ? i2 : null;
      }, n = (t2) => {
        const i2 = e(t2);
        return i2 ? document.querySelector(i2) : null;
      }, s = (t2) => {
        if (!t2)
          return 0;
        let { transitionDuration: e2, transitionDelay: i2 } = window.getComputedStyle(t2);
        const n2 = Number.parseFloat(e2), s2 = Number.parseFloat(i2);
        return n2 || s2 ? (e2 = e2.split(",")[0], i2 = i2.split(",")[0], 1e3 * (Number.parseFloat(e2) + Number.parseFloat(i2))) : 0;
      }, o = (t2) => {
        t2.dispatchEvent(new Event("transitionend"));
      }, r = (t2) => (t2[0] || t2).nodeType, a = (t2, e2) => {
        let i2 = false;
        const n2 = e2 + 5;
        t2.addEventListener("transitionend", function e3() {
          i2 = true, t2.removeEventListener("transitionend", e3);
        }), setTimeout(() => {
          i2 || o(t2);
        }, n2);
      }, l = (t2, e2, i2) => {
        Object.keys(i2).forEach((n2) => {
          const s2 = i2[n2], o2 = e2[n2], a2 = o2 && r(o2) ? "element" : null == (l2 = o2) ? "" + l2 : {}.toString.call(l2).match(/\s([a-z]+)/i)[1].toLowerCase();
          var l2;
          if (!new RegExp(s2).test(a2))
            throw new TypeError(`${t2.toUpperCase()}: Option "${n2}" provided type "${a2}" but expected type "${s2}".`);
        });
      }, c = (t2) => {
        if (!t2)
          return false;
        if (t2.style && t2.parentNode && t2.parentNode.style) {
          const e2 = getComputedStyle(t2), i2 = getComputedStyle(t2.parentNode);
          return "none" !== e2.display && "none" !== i2.display && "hidden" !== e2.visibility;
        }
        return false;
      }, d = (t2) => !t2 || t2.nodeType !== Node.ELEMENT_NODE || !!t2.classList.contains("disabled") || (void 0 !== t2.disabled ? t2.disabled : t2.hasAttribute("disabled") && "false" !== t2.getAttribute("disabled")), h = (t2) => {
        if (!document.documentElement.attachShadow)
          return null;
        if ("function" == typeof t2.getRootNode) {
          const e2 = t2.getRootNode();
          return e2 instanceof ShadowRoot ? e2 : null;
        }
        return t2 instanceof ShadowRoot ? t2 : t2.parentNode ? h(t2.parentNode) : null;
      }, u = () => {
      }, f = (t2) => t2.offsetHeight, p = () => {
        const { jQuery: t2 } = window;
        return t2 && !document.body.hasAttribute("data-bs-no-jquery") ? t2 : null;
      }, g = () => "rtl" === document.documentElement.dir, m = (t2, e2) => {
        var i2;
        i2 = () => {
          const i3 = p();
          if (i3) {
            const n2 = i3.fn[t2];
            i3.fn[t2] = e2.jQueryInterface, i3.fn[t2].Constructor = e2, i3.fn[t2].noConflict = () => (i3.fn[t2] = n2, e2.jQueryInterface);
          }
        }, "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", i2) : i2();
      }, _ = (t2) => {
        "function" == typeof t2 && t2();
      }, b = /* @__PURE__ */ new Map();
      var v = { set(t2, e2, i2) {
        b.has(t2) || b.set(t2, /* @__PURE__ */ new Map());
        const n2 = b.get(t2);
        n2.has(e2) || 0 === n2.size ? n2.set(e2, i2) : console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(n2.keys())[0]}.`);
      }, get: (t2, e2) => b.has(t2) && b.get(t2).get(e2) || null, remove(t2, e2) {
        if (!b.has(t2))
          return;
        const i2 = b.get(t2);
        i2.delete(e2), 0 === i2.size && b.delete(t2);
      } };
      const y = /[^.]*(?=\..*)\.|.*/, w = /\..*/, E = /::\d+$/, T = {};
      let A = 1;
      const L = { mouseenter: "mouseover", mouseleave: "mouseout" }, O = /^(mouseenter|mouseleave)/i, k = /* @__PURE__ */ new Set(["click", "dblclick", "mouseup", "mousedown", "contextmenu", "mousewheel", "DOMMouseScroll", "mouseover", "mouseout", "mousemove", "selectstart", "selectend", "keydown", "keypress", "keyup", "orientationchange", "touchstart", "touchmove", "touchend", "touchcancel", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointercancel", "gesturestart", "gesturechange", "gestureend", "focus", "blur", "change", "reset", "select", "submit", "focusin", "focusout", "load", "unload", "beforeunload", "resize", "move", "DOMContentLoaded", "readystatechange", "error", "abort", "scroll"]);
      function D(t2, e2) {
        return e2 && `${e2}::${A++}` || t2.uidEvent || A++;
      }
      function x(t2) {
        const e2 = D(t2);
        return t2.uidEvent = e2, T[e2] = T[e2] || {}, T[e2];
      }
      function C(t2, e2, i2 = null) {
        const n2 = Object.keys(t2);
        for (let s2 = 0, o2 = n2.length; s2 < o2; s2++) {
          const o3 = t2[n2[s2]];
          if (o3.originalHandler === e2 && o3.delegationSelector === i2)
            return o3;
        }
        return null;
      }
      function S(t2, e2, i2) {
        const n2 = "string" == typeof e2, s2 = n2 ? i2 : e2;
        let o2 = P(t2);
        return k.has(o2) || (o2 = t2), [n2, s2, o2];
      }
      function N(t2, e2, i2, n2, s2) {
        if ("string" != typeof e2 || !t2)
          return;
        if (i2 || (i2 = n2, n2 = null), O.test(e2)) {
          const t3 = (t4) => function(e3) {
            if (!e3.relatedTarget || e3.relatedTarget !== e3.delegateTarget && !e3.delegateTarget.contains(e3.relatedTarget))
              return t4.call(this, e3);
          };
          n2 ? n2 = t3(n2) : i2 = t3(i2);
        }
        const [o2, r2, a2] = S(e2, i2, n2), l2 = x(t2), c2 = l2[a2] || (l2[a2] = {}), d2 = C(c2, r2, o2 ? i2 : null);
        if (d2)
          return void (d2.oneOff = d2.oneOff && s2);
        const h2 = D(r2, e2.replace(y, "")), u2 = o2 ? function(t3, e3, i3) {
          return function n3(s3) {
            const o3 = t3.querySelectorAll(e3);
            for (let { target: r3 } = s3; r3 && r3 !== this; r3 = r3.parentNode)
              for (let a3 = o3.length; a3--; )
                if (o3[a3] === r3)
                  return s3.delegateTarget = r3, n3.oneOff && I.off(t3, s3.type, e3, i3), i3.apply(r3, [s3]);
            return null;
          };
        }(t2, i2, n2) : function(t3, e3) {
          return function i3(n3) {
            return n3.delegateTarget = t3, i3.oneOff && I.off(t3, n3.type, e3), e3.apply(t3, [n3]);
          };
        }(t2, i2);
        u2.delegationSelector = o2 ? i2 : null, u2.originalHandler = r2, u2.oneOff = s2, u2.uidEvent = h2, c2[h2] = u2, t2.addEventListener(a2, u2, o2);
      }
      function j(t2, e2, i2, n2, s2) {
        const o2 = C(e2[i2], n2, s2);
        o2 && (t2.removeEventListener(i2, o2, Boolean(s2)), delete e2[i2][o2.uidEvent]);
      }
      function P(t2) {
        return t2 = t2.replace(w, ""), L[t2] || t2;
      }
      const I = { on(t2, e2, i2, n2) {
        N(t2, e2, i2, n2, false);
      }, one(t2, e2, i2, n2) {
        N(t2, e2, i2, n2, true);
      }, off(t2, e2, i2, n2) {
        if ("string" != typeof e2 || !t2)
          return;
        const [s2, o2, r2] = S(e2, i2, n2), a2 = r2 !== e2, l2 = x(t2), c2 = e2.startsWith(".");
        if (void 0 !== o2) {
          if (!l2 || !l2[r2])
            return;
          return void j(t2, l2, r2, o2, s2 ? i2 : null);
        }
        c2 && Object.keys(l2).forEach((i3) => {
          !function(t3, e3, i4, n3) {
            const s3 = e3[i4] || {};
            Object.keys(s3).forEach((o3) => {
              if (o3.includes(n3)) {
                const n4 = s3[o3];
                j(t3, e3, i4, n4.originalHandler, n4.delegationSelector);
              }
            });
          }(t2, l2, i3, e2.slice(1));
        });
        const d2 = l2[r2] || {};
        Object.keys(d2).forEach((i3) => {
          const n3 = i3.replace(E, "");
          if (!a2 || e2.includes(n3)) {
            const e3 = d2[i3];
            j(t2, l2, r2, e3.originalHandler, e3.delegationSelector);
          }
        });
      }, trigger(t2, e2, i2) {
        if ("string" != typeof e2 || !t2)
          return null;
        const n2 = p(), s2 = P(e2), o2 = e2 !== s2, r2 = k.has(s2);
        let a2, l2 = true, c2 = true, d2 = false, h2 = null;
        return o2 && n2 && (a2 = n2.Event(e2, i2), n2(t2).trigger(a2), l2 = !a2.isPropagationStopped(), c2 = !a2.isImmediatePropagationStopped(), d2 = a2.isDefaultPrevented()), r2 ? (h2 = document.createEvent("HTMLEvents"), h2.initEvent(s2, l2, true)) : h2 = new CustomEvent(e2, { bubbles: l2, cancelable: true }), void 0 !== i2 && Object.keys(i2).forEach((t3) => {
          Object.defineProperty(h2, t3, { get: () => i2[t3] });
        }), d2 && h2.preventDefault(), c2 && t2.dispatchEvent(h2), h2.defaultPrevented && void 0 !== a2 && a2.preventDefault(), h2;
      } };
      class M {
        constructor(t2) {
          (t2 = "string" == typeof t2 ? document.querySelector(t2) : t2) && (this._element = t2, v.set(this._element, this.constructor.DATA_KEY, this));
        }
        dispose() {
          v.remove(this._element, this.constructor.DATA_KEY), I.off(this._element, "." + this.constructor.DATA_KEY), this._element = null;
        }
        static getInstance(t2) {
          return v.get(t2, this.DATA_KEY);
        }
        static get VERSION() {
          return "5.0.0";
        }
      }
      class H extends M {
        static get DATA_KEY() {
          return "bs.alert";
        }
        close(t2) {
          const e2 = t2 ? this._getRootElement(t2) : this._element, i2 = this._triggerCloseEvent(e2);
          null === i2 || i2.defaultPrevented || this._removeElement(e2);
        }
        _getRootElement(t2) {
          return n(t2) || t2.closest(".alert");
        }
        _triggerCloseEvent(t2) {
          return I.trigger(t2, "close.bs.alert");
        }
        _removeElement(t2) {
          if (t2.classList.remove("show"), !t2.classList.contains("fade"))
            return void this._destroyElement(t2);
          const e2 = s(t2);
          I.one(t2, "transitionend", () => this._destroyElement(t2)), a(t2, e2);
        }
        _destroyElement(t2) {
          t2.parentNode && t2.parentNode.removeChild(t2), I.trigger(t2, "closed.bs.alert");
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            let e2 = v.get(this, "bs.alert");
            e2 || (e2 = new H(this)), "close" === t2 && e2[t2](this);
          });
        }
        static handleDismiss(t2) {
          return function(e2) {
            e2 && e2.preventDefault(), t2.close(this);
          };
        }
      }
      I.on(document, "click.bs.alert.data-api", '[data-bs-dismiss="alert"]', H.handleDismiss(new H())), m("alert", H);
      class R extends M {
        static get DATA_KEY() {
          return "bs.button";
        }
        toggle() {
          this._element.setAttribute("aria-pressed", this._element.classList.toggle("active"));
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            let e2 = v.get(this, "bs.button");
            e2 || (e2 = new R(this)), "toggle" === t2 && e2[t2]();
          });
        }
      }
      function B(t2) {
        return "true" === t2 || "false" !== t2 && (t2 === Number(t2).toString() ? Number(t2) : "" === t2 || "null" === t2 ? null : t2);
      }
      function W(t2) {
        return t2.replace(/[A-Z]/g, (t3) => "-" + t3.toLowerCase());
      }
      I.on(document, "click.bs.button.data-api", '[data-bs-toggle="button"]', (t2) => {
        t2.preventDefault();
        const e2 = t2.target.closest('[data-bs-toggle="button"]');
        let i2 = v.get(e2, "bs.button");
        i2 || (i2 = new R(e2)), i2.toggle();
      }), m("button", R);
      const z = { setDataAttribute(t2, e2, i2) {
        t2.setAttribute("data-bs-" + W(e2), i2);
      }, removeDataAttribute(t2, e2) {
        t2.removeAttribute("data-bs-" + W(e2));
      }, getDataAttributes(t2) {
        if (!t2)
          return {};
        const e2 = {};
        return Object.keys(t2.dataset).filter((t3) => t3.startsWith("bs")).forEach((i2) => {
          let n2 = i2.replace(/^bs/, "");
          n2 = n2.charAt(0).toLowerCase() + n2.slice(1, n2.length), e2[n2] = B(t2.dataset[i2]);
        }), e2;
      }, getDataAttribute: (t2, e2) => B(t2.getAttribute("data-bs-" + W(e2))), offset(t2) {
        const e2 = t2.getBoundingClientRect();
        return { top: e2.top + document.body.scrollTop, left: e2.left + document.body.scrollLeft };
      }, position: (t2) => ({ top: t2.offsetTop, left: t2.offsetLeft }) }, U = { find: (t2, e2 = document.documentElement) => [].concat(...Element.prototype.querySelectorAll.call(e2, t2)), findOne: (t2, e2 = document.documentElement) => Element.prototype.querySelector.call(e2, t2), children: (t2, e2) => [].concat(...t2.children).filter((t3) => t3.matches(e2)), parents(t2, e2) {
        const i2 = [];
        let n2 = t2.parentNode;
        for (; n2 && n2.nodeType === Node.ELEMENT_NODE && 3 !== n2.nodeType; )
          n2.matches(e2) && i2.push(n2), n2 = n2.parentNode;
        return i2;
      }, prev(t2, e2) {
        let i2 = t2.previousElementSibling;
        for (; i2; ) {
          if (i2.matches(e2))
            return [i2];
          i2 = i2.previousElementSibling;
        }
        return [];
      }, next(t2, e2) {
        let i2 = t2.nextElementSibling;
        for (; i2; ) {
          if (i2.matches(e2))
            return [i2];
          i2 = i2.nextElementSibling;
        }
        return [];
      } }, $ = { interval: 5e3, keyboard: true, slide: false, pause: "hover", wrap: true, touch: true }, F = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean", touch: "boolean" }, K = "next", Y = "prev", q = "left", V = "right";
      class X extends M {
        constructor(t2, e2) {
          super(t2), this._items = null, this._interval = null, this._activeElement = null, this._isPaused = false, this._isSliding = false, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e2), this._indicatorsElement = U.findOne(".carousel-indicators", this._element), this._touchSupported = "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0, this._pointerEvent = Boolean(window.PointerEvent), this._addEventListeners();
        }
        static get Default() {
          return $;
        }
        static get DATA_KEY() {
          return "bs.carousel";
        }
        next() {
          this._isSliding || this._slide(K);
        }
        nextWhenVisible() {
          !document.hidden && c(this._element) && this.next();
        }
        prev() {
          this._isSliding || this._slide(Y);
        }
        pause(t2) {
          t2 || (this._isPaused = true), U.findOne(".carousel-item-next, .carousel-item-prev", this._element) && (o(this._element), this.cycle(true)), clearInterval(this._interval), this._interval = null;
        }
        cycle(t2) {
          t2 || (this._isPaused = false), this._interval && (clearInterval(this._interval), this._interval = null), this._config && this._config.interval && !this._isPaused && (this._updateInterval(), this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
        }
        to(t2) {
          this._activeElement = U.findOne(".active.carousel-item", this._element);
          const e2 = this._getItemIndex(this._activeElement);
          if (t2 > this._items.length - 1 || t2 < 0)
            return;
          if (this._isSliding)
            return void I.one(this._element, "slid.bs.carousel", () => this.to(t2));
          if (e2 === t2)
            return this.pause(), void this.cycle();
          const i2 = t2 > e2 ? K : Y;
          this._slide(i2, this._items[t2]);
        }
        dispose() {
          this._items = null, this._config = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null, super.dispose();
        }
        _getConfig(t2) {
          return t2 = { ...$, ...t2 }, l("carousel", t2, F), t2;
        }
        _handleSwipe() {
          const t2 = Math.abs(this.touchDeltaX);
          if (t2 <= 40)
            return;
          const e2 = t2 / this.touchDeltaX;
          this.touchDeltaX = 0, e2 && this._slide(e2 > 0 ? V : q);
        }
        _addEventListeners() {
          this._config.keyboard && I.on(this._element, "keydown.bs.carousel", (t2) => this._keydown(t2)), "hover" === this._config.pause && (I.on(this._element, "mouseenter.bs.carousel", (t2) => this.pause(t2)), I.on(this._element, "mouseleave.bs.carousel", (t2) => this.cycle(t2))), this._config.touch && this._touchSupported && this._addTouchEventListeners();
        }
        _addTouchEventListeners() {
          const t2 = (t3) => {
            !this._pointerEvent || "pen" !== t3.pointerType && "touch" !== t3.pointerType ? this._pointerEvent || (this.touchStartX = t3.touches[0].clientX) : this.touchStartX = t3.clientX;
          }, e2 = (t3) => {
            this.touchDeltaX = t3.touches && t3.touches.length > 1 ? 0 : t3.touches[0].clientX - this.touchStartX;
          }, i2 = (t3) => {
            !this._pointerEvent || "pen" !== t3.pointerType && "touch" !== t3.pointerType || (this.touchDeltaX = t3.clientX - this.touchStartX), this._handleSwipe(), "hover" === this._config.pause && (this.pause(), this.touchTimeout && clearTimeout(this.touchTimeout), this.touchTimeout = setTimeout((t4) => this.cycle(t4), 500 + this._config.interval));
          };
          U.find(".carousel-item img", this._element).forEach((t3) => {
            I.on(t3, "dragstart.bs.carousel", (t4) => t4.preventDefault());
          }), this._pointerEvent ? (I.on(this._element, "pointerdown.bs.carousel", (e3) => t2(e3)), I.on(this._element, "pointerup.bs.carousel", (t3) => i2(t3)), this._element.classList.add("pointer-event")) : (I.on(this._element, "touchstart.bs.carousel", (e3) => t2(e3)), I.on(this._element, "touchmove.bs.carousel", (t3) => e2(t3)), I.on(this._element, "touchend.bs.carousel", (t3) => i2(t3)));
        }
        _keydown(t2) {
          /input|textarea/i.test(t2.target.tagName) || ("ArrowLeft" === t2.key ? (t2.preventDefault(), this._slide(V)) : "ArrowRight" === t2.key && (t2.preventDefault(), this._slide(q)));
        }
        _getItemIndex(t2) {
          return this._items = t2 && t2.parentNode ? U.find(".carousel-item", t2.parentNode) : [], this._items.indexOf(t2);
        }
        _getItemByOrder(t2, e2) {
          const i2 = t2 === K, n2 = t2 === Y, s2 = this._getItemIndex(e2), o2 = this._items.length - 1;
          if ((n2 && 0 === s2 || i2 && s2 === o2) && !this._config.wrap)
            return e2;
          const r2 = (s2 + (n2 ? -1 : 1)) % this._items.length;
          return -1 === r2 ? this._items[this._items.length - 1] : this._items[r2];
        }
        _triggerSlideEvent(t2, e2) {
          const i2 = this._getItemIndex(t2), n2 = this._getItemIndex(U.findOne(".active.carousel-item", this._element));
          return I.trigger(this._element, "slide.bs.carousel", { relatedTarget: t2, direction: e2, from: n2, to: i2 });
        }
        _setActiveIndicatorElement(t2) {
          if (this._indicatorsElement) {
            const e2 = U.findOne(".active", this._indicatorsElement);
            e2.classList.remove("active"), e2.removeAttribute("aria-current");
            const i2 = U.find("[data-bs-target]", this._indicatorsElement);
            for (let e3 = 0; e3 < i2.length; e3++)
              if (Number.parseInt(i2[e3].getAttribute("data-bs-slide-to"), 10) === this._getItemIndex(t2)) {
                i2[e3].classList.add("active"), i2[e3].setAttribute("aria-current", "true");
                break;
              }
          }
        }
        _updateInterval() {
          const t2 = this._activeElement || U.findOne(".active.carousel-item", this._element);
          if (!t2)
            return;
          const e2 = Number.parseInt(t2.getAttribute("data-bs-interval"), 10);
          e2 ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, this._config.interval = e2) : this._config.interval = this._config.defaultInterval || this._config.interval;
        }
        _slide(t2, e2) {
          const i2 = this._directionToOrder(t2), n2 = U.findOne(".active.carousel-item", this._element), o2 = this._getItemIndex(n2), r2 = e2 || this._getItemByOrder(i2, n2), l2 = this._getItemIndex(r2), c2 = Boolean(this._interval), d2 = i2 === K, h2 = d2 ? "carousel-item-start" : "carousel-item-end", u2 = d2 ? "carousel-item-next" : "carousel-item-prev", p2 = this._orderToDirection(i2);
          if (r2 && r2.classList.contains("active"))
            this._isSliding = false;
          else if (!this._triggerSlideEvent(r2, p2).defaultPrevented && n2 && r2) {
            if (this._isSliding = true, c2 && this.pause(), this._setActiveIndicatorElement(r2), this._activeElement = r2, this._element.classList.contains("slide")) {
              r2.classList.add(u2), f(r2), n2.classList.add(h2), r2.classList.add(h2);
              const t3 = s(n2);
              I.one(n2, "transitionend", () => {
                r2.classList.remove(h2, u2), r2.classList.add("active"), n2.classList.remove("active", u2, h2), this._isSliding = false, setTimeout(() => {
                  I.trigger(this._element, "slid.bs.carousel", { relatedTarget: r2, direction: p2, from: o2, to: l2 });
                }, 0);
              }), a(n2, t3);
            } else
              n2.classList.remove("active"), r2.classList.add("active"), this._isSliding = false, I.trigger(this._element, "slid.bs.carousel", { relatedTarget: r2, direction: p2, from: o2, to: l2 });
            c2 && this.cycle();
          }
        }
        _directionToOrder(t2) {
          return [V, q].includes(t2) ? g() ? t2 === q ? Y : K : t2 === q ? K : Y : t2;
        }
        _orderToDirection(t2) {
          return [K, Y].includes(t2) ? g() ? t2 === Y ? q : V : t2 === Y ? V : q : t2;
        }
        static carouselInterface(t2, e2) {
          let i2 = v.get(t2, "bs.carousel"), n2 = { ...$, ...z.getDataAttributes(t2) };
          "object" == typeof e2 && (n2 = { ...n2, ...e2 });
          const s2 = "string" == typeof e2 ? e2 : n2.slide;
          if (i2 || (i2 = new X(t2, n2)), "number" == typeof e2)
            i2.to(e2);
          else if ("string" == typeof s2) {
            if (void 0 === i2[s2])
              throw new TypeError(`No method named "${s2}"`);
            i2[s2]();
          } else
            n2.interval && n2.ride && (i2.pause(), i2.cycle());
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            X.carouselInterface(this, t2);
          });
        }
        static dataApiClickHandler(t2) {
          const e2 = n(this);
          if (!e2 || !e2.classList.contains("carousel"))
            return;
          const i2 = { ...z.getDataAttributes(e2), ...z.getDataAttributes(this) }, s2 = this.getAttribute("data-bs-slide-to");
          s2 && (i2.interval = false), X.carouselInterface(e2, i2), s2 && v.get(e2, "bs.carousel").to(s2), t2.preventDefault();
        }
      }
      I.on(document, "click.bs.carousel.data-api", "[data-bs-slide], [data-bs-slide-to]", X.dataApiClickHandler), I.on(window, "load.bs.carousel.data-api", () => {
        const t2 = U.find('[data-bs-ride="carousel"]');
        for (let e2 = 0, i2 = t2.length; e2 < i2; e2++)
          X.carouselInterface(t2[e2], v.get(t2[e2], "bs.carousel"));
      }), m("carousel", X);
      const Q = { toggle: true, parent: "" }, G = { toggle: "boolean", parent: "(string|element)" };
      class Z extends M {
        constructor(t2, e2) {
          super(t2), this._isTransitioning = false, this._config = this._getConfig(e2), this._triggerArray = U.find(`[data-bs-toggle="collapse"][href="#${this._element.id}"],[data-bs-toggle="collapse"][data-bs-target="#${this._element.id}"]`);
          const n2 = U.find('[data-bs-toggle="collapse"]');
          for (let t3 = 0, e3 = n2.length; t3 < e3; t3++) {
            const e4 = n2[t3], s2 = i(e4), o2 = U.find(s2).filter((t4) => t4 === this._element);
            null !== s2 && o2.length && (this._selector = s2, this._triggerArray.push(e4));
          }
          this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
        }
        static get Default() {
          return Q;
        }
        static get DATA_KEY() {
          return "bs.collapse";
        }
        toggle() {
          this._element.classList.contains("show") ? this.hide() : this.show();
        }
        show() {
          if (this._isTransitioning || this._element.classList.contains("show"))
            return;
          let t2, e2;
          this._parent && (t2 = U.find(".show, .collapsing", this._parent).filter((t3) => "string" == typeof this._config.parent ? t3.getAttribute("data-bs-parent") === this._config.parent : t3.classList.contains("collapse")), 0 === t2.length && (t2 = null));
          const i2 = U.findOne(this._selector);
          if (t2) {
            const n3 = t2.find((t3) => i2 !== t3);
            if (e2 = n3 ? v.get(n3, "bs.collapse") : null, e2 && e2._isTransitioning)
              return;
          }
          if (I.trigger(this._element, "show.bs.collapse").defaultPrevented)
            return;
          t2 && t2.forEach((t3) => {
            i2 !== t3 && Z.collapseInterface(t3, "hide"), e2 || v.set(t3, "bs.collapse", null);
          });
          const n2 = this._getDimension();
          this._element.classList.remove("collapse"), this._element.classList.add("collapsing"), this._element.style[n2] = 0, this._triggerArray.length && this._triggerArray.forEach((t3) => {
            t3.classList.remove("collapsed"), t3.setAttribute("aria-expanded", true);
          }), this.setTransitioning(true);
          const o2 = "scroll" + (n2[0].toUpperCase() + n2.slice(1)), r2 = s(this._element);
          I.one(this._element, "transitionend", () => {
            this._element.classList.remove("collapsing"), this._element.classList.add("collapse", "show"), this._element.style[n2] = "", this.setTransitioning(false), I.trigger(this._element, "shown.bs.collapse");
          }), a(this._element, r2), this._element.style[n2] = this._element[o2] + "px";
        }
        hide() {
          if (this._isTransitioning || !this._element.classList.contains("show"))
            return;
          if (I.trigger(this._element, "hide.bs.collapse").defaultPrevented)
            return;
          const t2 = this._getDimension();
          this._element.style[t2] = this._element.getBoundingClientRect()[t2] + "px", f(this._element), this._element.classList.add("collapsing"), this._element.classList.remove("collapse", "show");
          const e2 = this._triggerArray.length;
          if (e2 > 0)
            for (let t3 = 0; t3 < e2; t3++) {
              const e3 = this._triggerArray[t3], i3 = n(e3);
              i3 && !i3.classList.contains("show") && (e3.classList.add("collapsed"), e3.setAttribute("aria-expanded", false));
            }
          this.setTransitioning(true), this._element.style[t2] = "";
          const i2 = s(this._element);
          I.one(this._element, "transitionend", () => {
            this.setTransitioning(false), this._element.classList.remove("collapsing"), this._element.classList.add("collapse"), I.trigger(this._element, "hidden.bs.collapse");
          }), a(this._element, i2);
        }
        setTransitioning(t2) {
          this._isTransitioning = t2;
        }
        dispose() {
          super.dispose(), this._config = null, this._parent = null, this._triggerArray = null, this._isTransitioning = null;
        }
        _getConfig(t2) {
          return (t2 = { ...Q, ...t2 }).toggle = Boolean(t2.toggle), l("collapse", t2, G), t2;
        }
        _getDimension() {
          return this._element.classList.contains("width") ? "width" : "height";
        }
        _getParent() {
          let { parent: t2 } = this._config;
          r(t2) ? void 0 === t2.jquery && void 0 === t2[0] || (t2 = t2[0]) : t2 = U.findOne(t2);
          const e2 = `[data-bs-toggle="collapse"][data-bs-parent="${t2}"]`;
          return U.find(e2, t2).forEach((t3) => {
            const e3 = n(t3);
            this._addAriaAndCollapsedClass(e3, [t3]);
          }), t2;
        }
        _addAriaAndCollapsedClass(t2, e2) {
          if (!t2 || !e2.length)
            return;
          const i2 = t2.classList.contains("show");
          e2.forEach((t3) => {
            i2 ? t3.classList.remove("collapsed") : t3.classList.add("collapsed"), t3.setAttribute("aria-expanded", i2);
          });
        }
        static collapseInterface(t2, e2) {
          let i2 = v.get(t2, "bs.collapse");
          const n2 = { ...Q, ...z.getDataAttributes(t2), ..."object" == typeof e2 && e2 ? e2 : {} };
          if (!i2 && n2.toggle && "string" == typeof e2 && /show|hide/.test(e2) && (n2.toggle = false), i2 || (i2 = new Z(t2, n2)), "string" == typeof e2) {
            if (void 0 === i2[e2])
              throw new TypeError(`No method named "${e2}"`);
            i2[e2]();
          }
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            Z.collapseInterface(this, t2);
          });
        }
      }
      I.on(document, "click.bs.collapse.data-api", '[data-bs-toggle="collapse"]', function(t2) {
        ("A" === t2.target.tagName || t2.delegateTarget && "A" === t2.delegateTarget.tagName) && t2.preventDefault();
        const e2 = z.getDataAttributes(this), n2 = i(this);
        U.find(n2).forEach((t3) => {
          const i2 = v.get(t3, "bs.collapse");
          let n3;
          i2 ? (null === i2._parent && "string" == typeof e2.parent && (i2._config.parent = e2.parent, i2._parent = i2._getParent()), n3 = "toggle") : n3 = e2, Z.collapseInterface(t3, n3);
        });
      }), m("collapse", Z);
      var J = "top", tt = "bottom", et = "right", it = "left", nt = [J, tt, et, it], st = nt.reduce(function(t2, e2) {
        return t2.concat([e2 + "-start", e2 + "-end"]);
      }, []), ot = [].concat(nt, ["auto"]).reduce(function(t2, e2) {
        return t2.concat([e2, e2 + "-start", e2 + "-end"]);
      }, []), rt = ["beforeRead", "read", "afterRead", "beforeMain", "main", "afterMain", "beforeWrite", "write", "afterWrite"];
      function at(t2) {
        return t2 ? (t2.nodeName || "").toLowerCase() : null;
      }
      function lt(t2) {
        if (null == t2)
          return window;
        if ("[object Window]" !== t2.toString()) {
          var e2 = t2.ownerDocument;
          return e2 && e2.defaultView || window;
        }
        return t2;
      }
      function ct(t2) {
        return t2 instanceof lt(t2).Element || t2 instanceof Element;
      }
      function dt(t2) {
        return t2 instanceof lt(t2).HTMLElement || t2 instanceof HTMLElement;
      }
      function ht(t2) {
        return "undefined" != typeof ShadowRoot && (t2 instanceof lt(t2).ShadowRoot || t2 instanceof ShadowRoot);
      }
      var ut = { name: "applyStyles", enabled: true, phase: "write", fn: function(t2) {
        var e2 = t2.state;
        Object.keys(e2.elements).forEach(function(t3) {
          var i2 = e2.styles[t3] || {}, n2 = e2.attributes[t3] || {}, s2 = e2.elements[t3];
          dt(s2) && at(s2) && (Object.assign(s2.style, i2), Object.keys(n2).forEach(function(t4) {
            var e3 = n2[t4];
            false === e3 ? s2.removeAttribute(t4) : s2.setAttribute(t4, true === e3 ? "" : e3);
          }));
        });
      }, effect: function(t2) {
        var e2 = t2.state, i2 = { popper: { position: e2.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} };
        return Object.assign(e2.elements.popper.style, i2.popper), e2.styles = i2, e2.elements.arrow && Object.assign(e2.elements.arrow.style, i2.arrow), function() {
          Object.keys(e2.elements).forEach(function(t3) {
            var n2 = e2.elements[t3], s2 = e2.attributes[t3] || {}, o2 = Object.keys(e2.styles.hasOwnProperty(t3) ? e2.styles[t3] : i2[t3]).reduce(function(t4, e3) {
              return t4[e3] = "", t4;
            }, {});
            dt(n2) && at(n2) && (Object.assign(n2.style, o2), Object.keys(s2).forEach(function(t4) {
              n2.removeAttribute(t4);
            }));
          });
        };
      }, requires: ["computeStyles"] };
      function ft(t2) {
        return t2.split("-")[0];
      }
      function pt(t2) {
        var e2 = t2.getBoundingClientRect();
        return { width: e2.width, height: e2.height, top: e2.top, right: e2.right, bottom: e2.bottom, left: e2.left, x: e2.left, y: e2.top };
      }
      function gt(t2) {
        var e2 = pt(t2), i2 = t2.offsetWidth, n2 = t2.offsetHeight;
        return Math.abs(e2.width - i2) <= 1 && (i2 = e2.width), Math.abs(e2.height - n2) <= 1 && (n2 = e2.height), { x: t2.offsetLeft, y: t2.offsetTop, width: i2, height: n2 };
      }
      function mt(t2, e2) {
        var i2 = e2.getRootNode && e2.getRootNode();
        if (t2.contains(e2))
          return true;
        if (i2 && ht(i2)) {
          var n2 = e2;
          do {
            if (n2 && t2.isSameNode(n2))
              return true;
            n2 = n2.parentNode || n2.host;
          } while (n2);
        }
        return false;
      }
      function _t(t2) {
        return lt(t2).getComputedStyle(t2);
      }
      function bt(t2) {
        return ["table", "td", "th"].indexOf(at(t2)) >= 0;
      }
      function vt(t2) {
        return ((ct(t2) ? t2.ownerDocument : t2.document) || window.document).documentElement;
      }
      function yt(t2) {
        return "html" === at(t2) ? t2 : t2.assignedSlot || t2.parentNode || (ht(t2) ? t2.host : null) || vt(t2);
      }
      function wt(t2) {
        return dt(t2) && "fixed" !== _t(t2).position ? t2.offsetParent : null;
      }
      function Et(t2) {
        for (var e2 = lt(t2), i2 = wt(t2); i2 && bt(i2) && "static" === _t(i2).position; )
          i2 = wt(i2);
        return i2 && ("html" === at(i2) || "body" === at(i2) && "static" === _t(i2).position) ? e2 : i2 || function(t3) {
          var e3 = -1 !== navigator.userAgent.toLowerCase().indexOf("firefox");
          if (-1 !== navigator.userAgent.indexOf("Trident") && dt(t3) && "fixed" === _t(t3).position)
            return null;
          for (var i3 = yt(t3); dt(i3) && ["html", "body"].indexOf(at(i3)) < 0; ) {
            var n2 = _t(i3);
            if ("none" !== n2.transform || "none" !== n2.perspective || "paint" === n2.contain || -1 !== ["transform", "perspective"].indexOf(n2.willChange) || e3 && "filter" === n2.willChange || e3 && n2.filter && "none" !== n2.filter)
              return i3;
            i3 = i3.parentNode;
          }
          return null;
        }(t2) || e2;
      }
      function Tt(t2) {
        return ["top", "bottom"].indexOf(t2) >= 0 ? "x" : "y";
      }
      var At = Math.max, Lt = Math.min, Ot = Math.round;
      function kt(t2, e2, i2) {
        return At(t2, Lt(e2, i2));
      }
      function Dt(t2) {
        return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, t2);
      }
      function xt(t2, e2) {
        return e2.reduce(function(e3, i2) {
          return e3[i2] = t2, e3;
        }, {});
      }
      var Ct = { name: "arrow", enabled: true, phase: "main", fn: function(t2) {
        var e2, i2 = t2.state, n2 = t2.name, s2 = t2.options, o2 = i2.elements.arrow, r2 = i2.modifiersData.popperOffsets, a2 = ft(i2.placement), l2 = Tt(a2), c2 = [it, et].indexOf(a2) >= 0 ? "height" : "width";
        if (o2 && r2) {
          var d2 = function(t3, e3) {
            return Dt("number" != typeof (t3 = "function" == typeof t3 ? t3(Object.assign({}, e3.rects, { placement: e3.placement })) : t3) ? t3 : xt(t3, nt));
          }(s2.padding, i2), h2 = gt(o2), u2 = "y" === l2 ? J : it, f2 = "y" === l2 ? tt : et, p2 = i2.rects.reference[c2] + i2.rects.reference[l2] - r2[l2] - i2.rects.popper[c2], g2 = r2[l2] - i2.rects.reference[l2], m2 = Et(o2), _2 = m2 ? "y" === l2 ? m2.clientHeight || 0 : m2.clientWidth || 0 : 0, b2 = p2 / 2 - g2 / 2, v2 = d2[u2], y2 = _2 - h2[c2] - d2[f2], w2 = _2 / 2 - h2[c2] / 2 + b2, E2 = kt(v2, w2, y2), T2 = l2;
          i2.modifiersData[n2] = ((e2 = {})[T2] = E2, e2.centerOffset = E2 - w2, e2);
        }
      }, effect: function(t2) {
        var e2 = t2.state, i2 = t2.options.element, n2 = void 0 === i2 ? "[data-popper-arrow]" : i2;
        null != n2 && ("string" != typeof n2 || (n2 = e2.elements.popper.querySelector(n2))) && mt(e2.elements.popper, n2) && (e2.elements.arrow = n2);
      }, requires: ["popperOffsets"], requiresIfExists: ["preventOverflow"] }, St = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
      function Nt(t2) {
        var e2, i2 = t2.popper, n2 = t2.popperRect, s2 = t2.placement, o2 = t2.offsets, r2 = t2.position, a2 = t2.gpuAcceleration, l2 = t2.adaptive, c2 = t2.roundOffsets, d2 = true === c2 ? function(t3) {
          var e3 = t3.x, i3 = t3.y, n3 = window.devicePixelRatio || 1;
          return { x: Ot(Ot(e3 * n3) / n3) || 0, y: Ot(Ot(i3 * n3) / n3) || 0 };
        }(o2) : "function" == typeof c2 ? c2(o2) : o2, h2 = d2.x, u2 = void 0 === h2 ? 0 : h2, f2 = d2.y, p2 = void 0 === f2 ? 0 : f2, g2 = o2.hasOwnProperty("x"), m2 = o2.hasOwnProperty("y"), _2 = it, b2 = J, v2 = window;
        if (l2) {
          var y2 = Et(i2), w2 = "clientHeight", E2 = "clientWidth";
          y2 === lt(i2) && "static" !== _t(y2 = vt(i2)).position && (w2 = "scrollHeight", E2 = "scrollWidth"), y2 = y2, s2 === J && (b2 = tt, p2 -= y2[w2] - n2.height, p2 *= a2 ? 1 : -1), s2 === it && (_2 = et, u2 -= y2[E2] - n2.width, u2 *= a2 ? 1 : -1);
        }
        var T2, A2 = Object.assign({ position: r2 }, l2 && St);
        return a2 ? Object.assign({}, A2, ((T2 = {})[b2] = m2 ? "0" : "", T2[_2] = g2 ? "0" : "", T2.transform = (v2.devicePixelRatio || 1) < 2 ? "translate(" + u2 + "px, " + p2 + "px)" : "translate3d(" + u2 + "px, " + p2 + "px, 0)", T2)) : Object.assign({}, A2, ((e2 = {})[b2] = m2 ? p2 + "px" : "", e2[_2] = g2 ? u2 + "px" : "", e2.transform = "", e2));
      }
      var jt = { name: "computeStyles", enabled: true, phase: "beforeWrite", fn: function(t2) {
        var e2 = t2.state, i2 = t2.options, n2 = i2.gpuAcceleration, s2 = void 0 === n2 || n2, o2 = i2.adaptive, r2 = void 0 === o2 || o2, a2 = i2.roundOffsets, l2 = void 0 === a2 || a2, c2 = { placement: ft(e2.placement), popper: e2.elements.popper, popperRect: e2.rects.popper, gpuAcceleration: s2 };
        null != e2.modifiersData.popperOffsets && (e2.styles.popper = Object.assign({}, e2.styles.popper, Nt(Object.assign({}, c2, { offsets: e2.modifiersData.popperOffsets, position: e2.options.strategy, adaptive: r2, roundOffsets: l2 })))), null != e2.modifiersData.arrow && (e2.styles.arrow = Object.assign({}, e2.styles.arrow, Nt(Object.assign({}, c2, { offsets: e2.modifiersData.arrow, position: "absolute", adaptive: false, roundOffsets: l2 })))), e2.attributes.popper = Object.assign({}, e2.attributes.popper, { "data-popper-placement": e2.placement });
      }, data: {} }, Pt = { passive: true }, It = { name: "eventListeners", enabled: true, phase: "write", fn: function() {
      }, effect: function(t2) {
        var e2 = t2.state, i2 = t2.instance, n2 = t2.options, s2 = n2.scroll, o2 = void 0 === s2 || s2, r2 = n2.resize, a2 = void 0 === r2 || r2, l2 = lt(e2.elements.popper), c2 = [].concat(e2.scrollParents.reference, e2.scrollParents.popper);
        return o2 && c2.forEach(function(t3) {
          t3.addEventListener("scroll", i2.update, Pt);
        }), a2 && l2.addEventListener("resize", i2.update, Pt), function() {
          o2 && c2.forEach(function(t3) {
            t3.removeEventListener("scroll", i2.update, Pt);
          }), a2 && l2.removeEventListener("resize", i2.update, Pt);
        };
      }, data: {} }, Mt = { left: "right", right: "left", bottom: "top", top: "bottom" };
      function Ht(t2) {
        return t2.replace(/left|right|bottom|top/g, function(t3) {
          return Mt[t3];
        });
      }
      var Rt = { start: "end", end: "start" };
      function Bt(t2) {
        return t2.replace(/start|end/g, function(t3) {
          return Rt[t3];
        });
      }
      function Wt(t2) {
        var e2 = lt(t2);
        return { scrollLeft: e2.pageXOffset, scrollTop: e2.pageYOffset };
      }
      function zt(t2) {
        return pt(vt(t2)).left + Wt(t2).scrollLeft;
      }
      function Ut(t2) {
        var e2 = _t(t2), i2 = e2.overflow, n2 = e2.overflowX, s2 = e2.overflowY;
        return /auto|scroll|overlay|hidden/.test(i2 + s2 + n2);
      }
      function $t(t2, e2) {
        var i2;
        void 0 === e2 && (e2 = []);
        var n2 = function t3(e3) {
          return ["html", "body", "#document"].indexOf(at(e3)) >= 0 ? e3.ownerDocument.body : dt(e3) && Ut(e3) ? e3 : t3(yt(e3));
        }(t2), s2 = n2 === (null == (i2 = t2.ownerDocument) ? void 0 : i2.body), o2 = lt(n2), r2 = s2 ? [o2].concat(o2.visualViewport || [], Ut(n2) ? n2 : []) : n2, a2 = e2.concat(r2);
        return s2 ? a2 : a2.concat($t(yt(r2)));
      }
      function Ft(t2) {
        return Object.assign({}, t2, { left: t2.x, top: t2.y, right: t2.x + t2.width, bottom: t2.y + t2.height });
      }
      function Kt(t2, e2) {
        return "viewport" === e2 ? Ft(function(t3) {
          var e3 = lt(t3), i2 = vt(t3), n2 = e3.visualViewport, s2 = i2.clientWidth, o2 = i2.clientHeight, r2 = 0, a2 = 0;
          return n2 && (s2 = n2.width, o2 = n2.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (r2 = n2.offsetLeft, a2 = n2.offsetTop)), { width: s2, height: o2, x: r2 + zt(t3), y: a2 };
        }(t2)) : dt(e2) ? function(t3) {
          var e3 = pt(t3);
          return e3.top = e3.top + t3.clientTop, e3.left = e3.left + t3.clientLeft, e3.bottom = e3.top + t3.clientHeight, e3.right = e3.left + t3.clientWidth, e3.width = t3.clientWidth, e3.height = t3.clientHeight, e3.x = e3.left, e3.y = e3.top, e3;
        }(e2) : Ft(function(t3) {
          var e3, i2 = vt(t3), n2 = Wt(t3), s2 = null == (e3 = t3.ownerDocument) ? void 0 : e3.body, o2 = At(i2.scrollWidth, i2.clientWidth, s2 ? s2.scrollWidth : 0, s2 ? s2.clientWidth : 0), r2 = At(i2.scrollHeight, i2.clientHeight, s2 ? s2.scrollHeight : 0, s2 ? s2.clientHeight : 0), a2 = -n2.scrollLeft + zt(t3), l2 = -n2.scrollTop;
          return "rtl" === _t(s2 || i2).direction && (a2 += At(i2.clientWidth, s2 ? s2.clientWidth : 0) - o2), { width: o2, height: r2, x: a2, y: l2 };
        }(vt(t2)));
      }
      function Yt(t2) {
        return t2.split("-")[1];
      }
      function qt(t2) {
        var e2, i2 = t2.reference, n2 = t2.element, s2 = t2.placement, o2 = s2 ? ft(s2) : null, r2 = s2 ? Yt(s2) : null, a2 = i2.x + i2.width / 2 - n2.width / 2, l2 = i2.y + i2.height / 2 - n2.height / 2;
        switch (o2) {
          case J:
            e2 = { x: a2, y: i2.y - n2.height };
            break;
          case tt:
            e2 = { x: a2, y: i2.y + i2.height };
            break;
          case et:
            e2 = { x: i2.x + i2.width, y: l2 };
            break;
          case it:
            e2 = { x: i2.x - n2.width, y: l2 };
            break;
          default:
            e2 = { x: i2.x, y: i2.y };
        }
        var c2 = o2 ? Tt(o2) : null;
        if (null != c2) {
          var d2 = "y" === c2 ? "height" : "width";
          switch (r2) {
            case "start":
              e2[c2] = e2[c2] - (i2[d2] / 2 - n2[d2] / 2);
              break;
            case "end":
              e2[c2] = e2[c2] + (i2[d2] / 2 - n2[d2] / 2);
          }
        }
        return e2;
      }
      function Vt(t2, e2) {
        void 0 === e2 && (e2 = {});
        var i2 = e2, n2 = i2.placement, s2 = void 0 === n2 ? t2.placement : n2, o2 = i2.boundary, r2 = void 0 === o2 ? "clippingParents" : o2, a2 = i2.rootBoundary, l2 = void 0 === a2 ? "viewport" : a2, c2 = i2.elementContext, d2 = void 0 === c2 ? "popper" : c2, h2 = i2.altBoundary, u2 = void 0 !== h2 && h2, f2 = i2.padding, p2 = void 0 === f2 ? 0 : f2, g2 = Dt("number" != typeof p2 ? p2 : xt(p2, nt)), m2 = "popper" === d2 ? "reference" : "popper", _2 = t2.elements.reference, b2 = t2.rects.popper, v2 = t2.elements[u2 ? m2 : d2], y2 = function(t3, e3, i3) {
          var n3 = "clippingParents" === e3 ? function(t4) {
            var e4 = $t(yt(t4)), i4 = ["absolute", "fixed"].indexOf(_t(t4).position) >= 0 && dt(t4) ? Et(t4) : t4;
            return ct(i4) ? e4.filter(function(t5) {
              return ct(t5) && mt(t5, i4) && "body" !== at(t5);
            }) : [];
          }(t3) : [].concat(e3), s3 = [].concat(n3, [i3]), o3 = s3[0], r3 = s3.reduce(function(e4, i4) {
            var n4 = Kt(t3, i4);
            return e4.top = At(n4.top, e4.top), e4.right = Lt(n4.right, e4.right), e4.bottom = Lt(n4.bottom, e4.bottom), e4.left = At(n4.left, e4.left), e4;
          }, Kt(t3, o3));
          return r3.width = r3.right - r3.left, r3.height = r3.bottom - r3.top, r3.x = r3.left, r3.y = r3.top, r3;
        }(ct(v2) ? v2 : v2.contextElement || vt(t2.elements.popper), r2, l2), w2 = pt(_2), E2 = qt({ reference: w2, element: b2, strategy: "absolute", placement: s2 }), T2 = Ft(Object.assign({}, b2, E2)), A2 = "popper" === d2 ? T2 : w2, L2 = { top: y2.top - A2.top + g2.top, bottom: A2.bottom - y2.bottom + g2.bottom, left: y2.left - A2.left + g2.left, right: A2.right - y2.right + g2.right }, O2 = t2.modifiersData.offset;
        if ("popper" === d2 && O2) {
          var k2 = O2[s2];
          Object.keys(L2).forEach(function(t3) {
            var e3 = [et, tt].indexOf(t3) >= 0 ? 1 : -1, i3 = [J, tt].indexOf(t3) >= 0 ? "y" : "x";
            L2[t3] += k2[i3] * e3;
          });
        }
        return L2;
      }
      function Xt(t2, e2) {
        void 0 === e2 && (e2 = {});
        var i2 = e2, n2 = i2.placement, s2 = i2.boundary, o2 = i2.rootBoundary, r2 = i2.padding, a2 = i2.flipVariations, l2 = i2.allowedAutoPlacements, c2 = void 0 === l2 ? ot : l2, d2 = Yt(n2), h2 = d2 ? a2 ? st : st.filter(function(t3) {
          return Yt(t3) === d2;
        }) : nt, u2 = h2.filter(function(t3) {
          return c2.indexOf(t3) >= 0;
        });
        0 === u2.length && (u2 = h2);
        var f2 = u2.reduce(function(e3, i3) {
          return e3[i3] = Vt(t2, { placement: i3, boundary: s2, rootBoundary: o2, padding: r2 })[ft(i3)], e3;
        }, {});
        return Object.keys(f2).sort(function(t3, e3) {
          return f2[t3] - f2[e3];
        });
      }
      var Qt = { name: "flip", enabled: true, phase: "main", fn: function(t2) {
        var e2 = t2.state, i2 = t2.options, n2 = t2.name;
        if (!e2.modifiersData[n2]._skip) {
          for (var s2 = i2.mainAxis, o2 = void 0 === s2 || s2, r2 = i2.altAxis, a2 = void 0 === r2 || r2, l2 = i2.fallbackPlacements, c2 = i2.padding, d2 = i2.boundary, h2 = i2.rootBoundary, u2 = i2.altBoundary, f2 = i2.flipVariations, p2 = void 0 === f2 || f2, g2 = i2.allowedAutoPlacements, m2 = e2.options.placement, _2 = ft(m2), b2 = l2 || (_2 !== m2 && p2 ? function(t3) {
            if ("auto" === ft(t3))
              return [];
            var e3 = Ht(t3);
            return [Bt(t3), e3, Bt(e3)];
          }(m2) : [Ht(m2)]), v2 = [m2].concat(b2).reduce(function(t3, i3) {
            return t3.concat("auto" === ft(i3) ? Xt(e2, { placement: i3, boundary: d2, rootBoundary: h2, padding: c2, flipVariations: p2, allowedAutoPlacements: g2 }) : i3);
          }, []), y2 = e2.rects.reference, w2 = e2.rects.popper, E2 = /* @__PURE__ */ new Map(), T2 = true, A2 = v2[0], L2 = 0; L2 < v2.length; L2++) {
            var O2 = v2[L2], k2 = ft(O2), D2 = "start" === Yt(O2), x2 = [J, tt].indexOf(k2) >= 0, C2 = x2 ? "width" : "height", S2 = Vt(e2, { placement: O2, boundary: d2, rootBoundary: h2, altBoundary: u2, padding: c2 }), N2 = x2 ? D2 ? et : it : D2 ? tt : J;
            y2[C2] > w2[C2] && (N2 = Ht(N2));
            var j2 = Ht(N2), P2 = [];
            if (o2 && P2.push(S2[k2] <= 0), a2 && P2.push(S2[N2] <= 0, S2[j2] <= 0), P2.every(function(t3) {
              return t3;
            })) {
              A2 = O2, T2 = false;
              break;
            }
            E2.set(O2, P2);
          }
          if (T2)
            for (var I2 = function(t3) {
              var e3 = v2.find(function(e4) {
                var i3 = E2.get(e4);
                if (i3)
                  return i3.slice(0, t3).every(function(t4) {
                    return t4;
                  });
              });
              if (e3)
                return A2 = e3, "break";
            }, M2 = p2 ? 3 : 1; M2 > 0 && "break" !== I2(M2); M2--)
              ;
          e2.placement !== A2 && (e2.modifiersData[n2]._skip = true, e2.placement = A2, e2.reset = true);
        }
      }, requiresIfExists: ["offset"], data: { _skip: false } };
      function Gt(t2, e2, i2) {
        return void 0 === i2 && (i2 = { x: 0, y: 0 }), { top: t2.top - e2.height - i2.y, right: t2.right - e2.width + i2.x, bottom: t2.bottom - e2.height + i2.y, left: t2.left - e2.width - i2.x };
      }
      function Zt(t2) {
        return [J, et, tt, it].some(function(e2) {
          return t2[e2] >= 0;
        });
      }
      var Jt = { name: "hide", enabled: true, phase: "main", requiresIfExists: ["preventOverflow"], fn: function(t2) {
        var e2 = t2.state, i2 = t2.name, n2 = e2.rects.reference, s2 = e2.rects.popper, o2 = e2.modifiersData.preventOverflow, r2 = Vt(e2, { elementContext: "reference" }), a2 = Vt(e2, { altBoundary: true }), l2 = Gt(r2, n2), c2 = Gt(a2, s2, o2), d2 = Zt(l2), h2 = Zt(c2);
        e2.modifiersData[i2] = { referenceClippingOffsets: l2, popperEscapeOffsets: c2, isReferenceHidden: d2, hasPopperEscaped: h2 }, e2.attributes.popper = Object.assign({}, e2.attributes.popper, { "data-popper-reference-hidden": d2, "data-popper-escaped": h2 });
      } }, te = { name: "offset", enabled: true, phase: "main", requires: ["popperOffsets"], fn: function(t2) {
        var e2 = t2.state, i2 = t2.options, n2 = t2.name, s2 = i2.offset, o2 = void 0 === s2 ? [0, 0] : s2, r2 = ot.reduce(function(t3, i3) {
          return t3[i3] = function(t4, e3, i4) {
            var n3 = ft(t4), s3 = [it, J].indexOf(n3) >= 0 ? -1 : 1, o3 = "function" == typeof i4 ? i4(Object.assign({}, e3, { placement: t4 })) : i4, r3 = o3[0], a3 = o3[1];
            return r3 = r3 || 0, a3 = (a3 || 0) * s3, [it, et].indexOf(n3) >= 0 ? { x: a3, y: r3 } : { x: r3, y: a3 };
          }(i3, e2.rects, o2), t3;
        }, {}), a2 = r2[e2.placement], l2 = a2.x, c2 = a2.y;
        null != e2.modifiersData.popperOffsets && (e2.modifiersData.popperOffsets.x += l2, e2.modifiersData.popperOffsets.y += c2), e2.modifiersData[n2] = r2;
      } }, ee = { name: "popperOffsets", enabled: true, phase: "read", fn: function(t2) {
        var e2 = t2.state, i2 = t2.name;
        e2.modifiersData[i2] = qt({ reference: e2.rects.reference, element: e2.rects.popper, strategy: "absolute", placement: e2.placement });
      }, data: {} }, ie = { name: "preventOverflow", enabled: true, phase: "main", fn: function(t2) {
        var e2 = t2.state, i2 = t2.options, n2 = t2.name, s2 = i2.mainAxis, o2 = void 0 === s2 || s2, r2 = i2.altAxis, a2 = void 0 !== r2 && r2, l2 = i2.boundary, c2 = i2.rootBoundary, d2 = i2.altBoundary, h2 = i2.padding, u2 = i2.tether, f2 = void 0 === u2 || u2, p2 = i2.tetherOffset, g2 = void 0 === p2 ? 0 : p2, m2 = Vt(e2, { boundary: l2, rootBoundary: c2, padding: h2, altBoundary: d2 }), _2 = ft(e2.placement), b2 = Yt(e2.placement), v2 = !b2, y2 = Tt(_2), w2 = "x" === y2 ? "y" : "x", E2 = e2.modifiersData.popperOffsets, T2 = e2.rects.reference, A2 = e2.rects.popper, L2 = "function" == typeof g2 ? g2(Object.assign({}, e2.rects, { placement: e2.placement })) : g2, O2 = { x: 0, y: 0 };
        if (E2) {
          if (o2 || a2) {
            var k2 = "y" === y2 ? J : it, D2 = "y" === y2 ? tt : et, x2 = "y" === y2 ? "height" : "width", C2 = E2[y2], S2 = E2[y2] + m2[k2], N2 = E2[y2] - m2[D2], j2 = f2 ? -A2[x2] / 2 : 0, P2 = "start" === b2 ? T2[x2] : A2[x2], I2 = "start" === b2 ? -A2[x2] : -T2[x2], M2 = e2.elements.arrow, H2 = f2 && M2 ? gt(M2) : { width: 0, height: 0 }, R2 = e2.modifiersData["arrow#persistent"] ? e2.modifiersData["arrow#persistent"].padding : { top: 0, right: 0, bottom: 0, left: 0 }, B2 = R2[k2], W2 = R2[D2], z2 = kt(0, T2[x2], H2[x2]), U2 = v2 ? T2[x2] / 2 - j2 - z2 - B2 - L2 : P2 - z2 - B2 - L2, $2 = v2 ? -T2[x2] / 2 + j2 + z2 + W2 + L2 : I2 + z2 + W2 + L2, F2 = e2.elements.arrow && Et(e2.elements.arrow), K2 = F2 ? "y" === y2 ? F2.clientTop || 0 : F2.clientLeft || 0 : 0, Y2 = e2.modifiersData.offset ? e2.modifiersData.offset[e2.placement][y2] : 0, q2 = E2[y2] + U2 - Y2 - K2, V2 = E2[y2] + $2 - Y2;
            if (o2) {
              var X2 = kt(f2 ? Lt(S2, q2) : S2, C2, f2 ? At(N2, V2) : N2);
              E2[y2] = X2, O2[y2] = X2 - C2;
            }
            if (a2) {
              var Q2 = "x" === y2 ? J : it, G2 = "x" === y2 ? tt : et, Z2 = E2[w2], nt2 = Z2 + m2[Q2], st2 = Z2 - m2[G2], ot2 = kt(f2 ? Lt(nt2, q2) : nt2, Z2, f2 ? At(st2, V2) : st2);
              E2[w2] = ot2, O2[w2] = ot2 - Z2;
            }
          }
          e2.modifiersData[n2] = O2;
        }
      }, requiresIfExists: ["offset"] };
      function ne(t2, e2, i2) {
        void 0 === i2 && (i2 = false);
        var n2, s2, o2 = vt(e2), r2 = pt(t2), a2 = dt(e2), l2 = { scrollLeft: 0, scrollTop: 0 }, c2 = { x: 0, y: 0 };
        return (a2 || !a2 && !i2) && (("body" !== at(e2) || Ut(o2)) && (l2 = (n2 = e2) !== lt(n2) && dt(n2) ? { scrollLeft: (s2 = n2).scrollLeft, scrollTop: s2.scrollTop } : Wt(n2)), dt(e2) ? ((c2 = pt(e2)).x += e2.clientLeft, c2.y += e2.clientTop) : o2 && (c2.x = zt(o2))), { x: r2.left + l2.scrollLeft - c2.x, y: r2.top + l2.scrollTop - c2.y, width: r2.width, height: r2.height };
      }
      var se = { placement: "bottom", modifiers: [], strategy: "absolute" };
      function oe() {
        for (var t2 = arguments.length, e2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          e2[i2] = arguments[i2];
        return !e2.some(function(t3) {
          return !(t3 && "function" == typeof t3.getBoundingClientRect);
        });
      }
      function re(t2) {
        void 0 === t2 && (t2 = {});
        var e2 = t2, i2 = e2.defaultModifiers, n2 = void 0 === i2 ? [] : i2, s2 = e2.defaultOptions, o2 = void 0 === s2 ? se : s2;
        return function(t3, e3, i3) {
          void 0 === i3 && (i3 = o2);
          var s3, r2, a2 = { placement: "bottom", orderedModifiers: [], options: Object.assign({}, se, o2), modifiersData: {}, elements: { reference: t3, popper: e3 }, attributes: {}, styles: {} }, l2 = [], c2 = false, d2 = { state: a2, setOptions: function(i4) {
            h2(), a2.options = Object.assign({}, o2, a2.options, i4), a2.scrollParents = { reference: ct(t3) ? $t(t3) : t3.contextElement ? $t(t3.contextElement) : [], popper: $t(e3) };
            var s4, r3, c3 = function(t4) {
              var e4 = function(t5) {
                var e5 = /* @__PURE__ */ new Map(), i5 = /* @__PURE__ */ new Set(), n3 = [];
                return t5.forEach(function(t6) {
                  e5.set(t6.name, t6);
                }), t5.forEach(function(t6) {
                  i5.has(t6.name) || function t7(s5) {
                    i5.add(s5.name), [].concat(s5.requires || [], s5.requiresIfExists || []).forEach(function(n4) {
                      if (!i5.has(n4)) {
                        var s6 = e5.get(n4);
                        s6 && t7(s6);
                      }
                    }), n3.push(s5);
                  }(t6);
                }), n3;
              }(t4);
              return rt.reduce(function(t5, i5) {
                return t5.concat(e4.filter(function(t6) {
                  return t6.phase === i5;
                }));
              }, []);
            }((s4 = [].concat(n2, a2.options.modifiers), r3 = s4.reduce(function(t4, e4) {
              var i5 = t4[e4.name];
              return t4[e4.name] = i5 ? Object.assign({}, i5, e4, { options: Object.assign({}, i5.options, e4.options), data: Object.assign({}, i5.data, e4.data) }) : e4, t4;
            }, {}), Object.keys(r3).map(function(t4) {
              return r3[t4];
            })));
            return a2.orderedModifiers = c3.filter(function(t4) {
              return t4.enabled;
            }), a2.orderedModifiers.forEach(function(t4) {
              var e4 = t4.name, i5 = t4.options, n3 = void 0 === i5 ? {} : i5, s5 = t4.effect;
              if ("function" == typeof s5) {
                var o3 = s5({ state: a2, name: e4, instance: d2, options: n3 });
                l2.push(o3 || function() {
                });
              }
            }), d2.update();
          }, forceUpdate: function() {
            if (!c2) {
              var t4 = a2.elements, e4 = t4.reference, i4 = t4.popper;
              if (oe(e4, i4)) {
                a2.rects = { reference: ne(e4, Et(i4), "fixed" === a2.options.strategy), popper: gt(i4) }, a2.reset = false, a2.placement = a2.options.placement, a2.orderedModifiers.forEach(function(t5) {
                  return a2.modifiersData[t5.name] = Object.assign({}, t5.data);
                });
                for (var n3 = 0; n3 < a2.orderedModifiers.length; n3++)
                  if (true !== a2.reset) {
                    var s4 = a2.orderedModifiers[n3], o3 = s4.fn, r3 = s4.options, l3 = void 0 === r3 ? {} : r3, h3 = s4.name;
                    "function" == typeof o3 && (a2 = o3({ state: a2, options: l3, name: h3, instance: d2 }) || a2);
                  } else
                    a2.reset = false, n3 = -1;
              }
            }
          }, update: (s3 = function() {
            return new Promise(function(t4) {
              d2.forceUpdate(), t4(a2);
            });
          }, function() {
            return r2 || (r2 = new Promise(function(t4) {
              Promise.resolve().then(function() {
                r2 = void 0, t4(s3());
              });
            })), r2;
          }), destroy: function() {
            h2(), c2 = true;
          } };
          if (!oe(t3, e3))
            return d2;
          function h2() {
            l2.forEach(function(t4) {
              return t4();
            }), l2 = [];
          }
          return d2.setOptions(i3).then(function(t4) {
            !c2 && i3.onFirstUpdate && i3.onFirstUpdate(t4);
          }), d2;
        };
      }
      var ae = re(), le = re({ defaultModifiers: [It, ee, jt, ut] }), ce = re({ defaultModifiers: [It, ee, jt, ut, te, Qt, ie, Ct, Jt] }), de = Object.freeze({ __proto__: null, popperGenerator: re, detectOverflow: Vt, createPopperBase: ae, createPopper: ce, createPopperLite: le, top: J, bottom: tt, right: et, left: it, auto: "auto", basePlacements: nt, start: "start", end: "end", clippingParents: "clippingParents", viewport: "viewport", popper: "popper", reference: "reference", variationPlacements: st, placements: ot, beforeRead: "beforeRead", read: "read", afterRead: "afterRead", beforeMain: "beforeMain", main: "main", afterMain: "afterMain", beforeWrite: "beforeWrite", write: "write", afterWrite: "afterWrite", modifierPhases: rt, applyStyles: ut, arrow: Ct, computeStyles: jt, eventListeners: It, flip: Qt, hide: Jt, offset: te, popperOffsets: ee, preventOverflow: ie });
      const he = new RegExp("ArrowUp|ArrowDown|Escape"), ue = g() ? "top-end" : "top-start", fe = g() ? "top-start" : "top-end", pe = g() ? "bottom-end" : "bottom-start", ge = g() ? "bottom-start" : "bottom-end", me = g() ? "left-start" : "right-start", _e = g() ? "right-start" : "left-start", be = { offset: [0, 2], boundary: "clippingParents", reference: "toggle", display: "dynamic", popperConfig: null, autoClose: true }, ve = { offset: "(array|string|function)", boundary: "(string|element)", reference: "(string|element|object)", display: "string", popperConfig: "(null|object|function)", autoClose: "(boolean|string)" };
      class ye extends M {
        constructor(t2, e2) {
          super(t2), this._popper = null, this._config = this._getConfig(e2), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners();
        }
        static get Default() {
          return be;
        }
        static get DefaultType() {
          return ve;
        }
        static get DATA_KEY() {
          return "bs.dropdown";
        }
        toggle() {
          d(this._element) || (this._element.classList.contains("show") ? this.hide() : this.show());
        }
        show() {
          if (d(this._element) || this._menu.classList.contains("show"))
            return;
          const t2 = ye.getParentFromElement(this._element), e2 = { relatedTarget: this._element };
          if (!I.trigger(this._element, "show.bs.dropdown", e2).defaultPrevented) {
            if (this._inNavbar)
              z.setDataAttribute(this._menu, "popper", "none");
            else {
              if (void 0 === de)
                throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");
              let e3 = this._element;
              "parent" === this._config.reference ? e3 = t2 : r(this._config.reference) ? (e3 = this._config.reference, void 0 !== this._config.reference.jquery && (e3 = this._config.reference[0])) : "object" == typeof this._config.reference && (e3 = this._config.reference);
              const i2 = this._getPopperConfig(), n2 = i2.modifiers.find((t3) => "applyStyles" === t3.name && false === t3.enabled);
              this._popper = ce(e3, this._menu, i2), n2 && z.setDataAttribute(this._menu, "popper", "static");
            }
            "ontouchstart" in document.documentElement && !t2.closest(".navbar-nav") && [].concat(...document.body.children).forEach((t3) => I.on(t3, "mouseover", u)), this._element.focus(), this._element.setAttribute("aria-expanded", true), this._menu.classList.toggle("show"), this._element.classList.toggle("show"), I.trigger(this._element, "shown.bs.dropdown", e2);
          }
        }
        hide() {
          if (d(this._element) || !this._menu.classList.contains("show"))
            return;
          const t2 = { relatedTarget: this._element };
          this._completeHide(t2);
        }
        dispose() {
          this._menu = null, this._popper && (this._popper.destroy(), this._popper = null), super.dispose();
        }
        update() {
          this._inNavbar = this._detectNavbar(), this._popper && this._popper.update();
        }
        _addEventListeners() {
          I.on(this._element, "click.bs.dropdown", (t2) => {
            t2.preventDefault(), this.toggle();
          });
        }
        _completeHide(t2) {
          I.trigger(this._element, "hide.bs.dropdown", t2).defaultPrevented || ("ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t3) => I.off(t3, "mouseover", u)), this._popper && this._popper.destroy(), this._menu.classList.remove("show"), this._element.classList.remove("show"), this._element.setAttribute("aria-expanded", "false"), z.removeDataAttribute(this._menu, "popper"), I.trigger(this._element, "hidden.bs.dropdown", t2));
        }
        _getConfig(t2) {
          if (t2 = { ...this.constructor.Default, ...z.getDataAttributes(this._element), ...t2 }, l("dropdown", t2, this.constructor.DefaultType), "object" == typeof t2.reference && !r(t2.reference) && "function" != typeof t2.reference.getBoundingClientRect)
            throw new TypeError("dropdown".toUpperCase() + ': Option "reference" provided type "object" without a required "getBoundingClientRect" method.');
          return t2;
        }
        _getMenuElement() {
          return U.next(this._element, ".dropdown-menu")[0];
        }
        _getPlacement() {
          const t2 = this._element.parentNode;
          if (t2.classList.contains("dropend"))
            return me;
          if (t2.classList.contains("dropstart"))
            return _e;
          const e2 = "end" === getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();
          return t2.classList.contains("dropup") ? e2 ? fe : ue : e2 ? ge : pe;
        }
        _detectNavbar() {
          return null !== this._element.closest(".navbar");
        }
        _getOffset() {
          const { offset: t2 } = this._config;
          return "string" == typeof t2 ? t2.split(",").map((t3) => Number.parseInt(t3, 10)) : "function" == typeof t2 ? (e2) => t2(e2, this._element) : t2;
        }
        _getPopperConfig() {
          const t2 = { placement: this._getPlacement(), modifiers: [{ name: "preventOverflow", options: { boundary: this._config.boundary } }, { name: "offset", options: { offset: this._getOffset() } }] };
          return "static" === this._config.display && (t2.modifiers = [{ name: "applyStyles", enabled: false }]), { ...t2, ..."function" == typeof this._config.popperConfig ? this._config.popperConfig(t2) : this._config.popperConfig };
        }
        _selectMenuItem(t2) {
          const e2 = U.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", this._menu).filter(c);
          if (!e2.length)
            return;
          let i2 = e2.indexOf(t2.target);
          "ArrowUp" === t2.key && i2 > 0 && i2--, "ArrowDown" === t2.key && i2 < e2.length - 1 && i2++, i2 = -1 === i2 ? 0 : i2, e2[i2].focus();
        }
        static dropdownInterface(t2, e2) {
          let i2 = v.get(t2, "bs.dropdown");
          if (i2 || (i2 = new ye(t2, "object" == typeof e2 ? e2 : null)), "string" == typeof e2) {
            if (void 0 === i2[e2])
              throw new TypeError(`No method named "${e2}"`);
            i2[e2]();
          }
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            ye.dropdownInterface(this, t2);
          });
        }
        static clearMenus(t2) {
          if (t2) {
            if (2 === t2.button || "keyup" === t2.type && "Tab" !== t2.key)
              return;
            if (/input|select|option|textarea|form/i.test(t2.target.tagName))
              return;
          }
          const e2 = U.find('[data-bs-toggle="dropdown"]');
          for (let i2 = 0, n2 = e2.length; i2 < n2; i2++) {
            const n3 = v.get(e2[i2], "bs.dropdown");
            if (!n3 || false === n3._config.autoClose)
              continue;
            if (!n3._element.classList.contains("show"))
              continue;
            const s2 = { relatedTarget: n3._element };
            if (t2) {
              const e3 = t2.composedPath(), i3 = e3.includes(n3._menu);
              if (e3.includes(n3._element) || "inside" === n3._config.autoClose && !i3 || "outside" === n3._config.autoClose && i3)
                continue;
              if ("keyup" === t2.type && "Tab" === t2.key && n3._menu.contains(t2.target))
                continue;
              "click" === t2.type && (s2.clickEvent = t2);
            }
            n3._completeHide(s2);
          }
        }
        static getParentFromElement(t2) {
          return n(t2) || t2.parentNode;
        }
        static dataApiKeydownHandler(t2) {
          if (/input|textarea/i.test(t2.target.tagName) ? "Space" === t2.key || "Escape" !== t2.key && ("ArrowDown" !== t2.key && "ArrowUp" !== t2.key || t2.target.closest(".dropdown-menu")) : !he.test(t2.key))
            return;
          const e2 = this.classList.contains("show");
          if (!e2 && "Escape" === t2.key)
            return;
          if (t2.preventDefault(), t2.stopPropagation(), d(this))
            return;
          const i2 = () => this.matches('[data-bs-toggle="dropdown"]') ? this : U.prev(this, '[data-bs-toggle="dropdown"]')[0];
          if ("Escape" === t2.key)
            return i2().focus(), void ye.clearMenus();
          e2 || "ArrowUp" !== t2.key && "ArrowDown" !== t2.key ? e2 && "Space" !== t2.key ? ye.getInstance(i2())._selectMenuItem(t2) : ye.clearMenus() : i2().click();
        }
      }
      I.on(document, "keydown.bs.dropdown.data-api", '[data-bs-toggle="dropdown"]', ye.dataApiKeydownHandler), I.on(document, "keydown.bs.dropdown.data-api", ".dropdown-menu", ye.dataApiKeydownHandler), I.on(document, "click.bs.dropdown.data-api", ye.clearMenus), I.on(document, "keyup.bs.dropdown.data-api", ye.clearMenus), I.on(document, "click.bs.dropdown.data-api", '[data-bs-toggle="dropdown"]', function(t2) {
        t2.preventDefault(), ye.dropdownInterface(this);
      }), m("dropdown", ye);
      const we = () => {
        const t2 = document.documentElement.clientWidth;
        return Math.abs(window.innerWidth - t2);
      }, Ee = (t2 = we()) => {
        Te(), Ae("body", "paddingRight", (e2) => e2 + t2), Ae(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", "paddingRight", (e2) => e2 + t2), Ae(".sticky-top", "marginRight", (e2) => e2 - t2);
      }, Te = () => {
        const t2 = document.body.style.overflow;
        t2 && z.setDataAttribute(document.body, "overflow", t2), document.body.style.overflow = "hidden";
      }, Ae = (t2, e2, i2) => {
        const n2 = we();
        U.find(t2).forEach((t3) => {
          if (t3 !== document.body && window.innerWidth > t3.clientWidth + n2)
            return;
          const s2 = t3.style[e2], o2 = window.getComputedStyle(t3)[e2];
          z.setDataAttribute(t3, e2, s2), t3.style[e2] = i2(Number.parseFloat(o2)) + "px";
        });
      }, Le = () => {
        Oe("body", "overflow"), Oe("body", "paddingRight"), Oe(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", "paddingRight"), Oe(".sticky-top", "marginRight");
      }, Oe = (t2, e2) => {
        U.find(t2).forEach((t3) => {
          const i2 = z.getDataAttribute(t3, e2);
          void 0 === i2 ? t3.style.removeProperty(e2) : (z.removeDataAttribute(t3, e2), t3.style[e2] = i2);
        });
      }, ke = { isVisible: true, isAnimated: false, rootElement: document.body, clickCallback: null }, De = { isVisible: "boolean", isAnimated: "boolean", rootElement: "element", clickCallback: "(function|null)" };
      class xe {
        constructor(t2) {
          this._config = this._getConfig(t2), this._isAppended = false, this._element = null;
        }
        show(t2) {
          this._config.isVisible ? (this._append(), this._config.isAnimated && f(this._getElement()), this._getElement().classList.add("show"), this._emulateAnimation(() => {
            _(t2);
          })) : _(t2);
        }
        hide(t2) {
          this._config.isVisible ? (this._getElement().classList.remove("show"), this._emulateAnimation(() => {
            this.dispose(), _(t2);
          })) : _(t2);
        }
        _getElement() {
          if (!this._element) {
            const t2 = document.createElement("div");
            t2.className = "modal-backdrop", this._config.isAnimated && t2.classList.add("fade"), this._element = t2;
          }
          return this._element;
        }
        _getConfig(t2) {
          return t2 = { ...ke, ..."object" == typeof t2 ? t2 : {} }, l("backdrop", t2, De), t2;
        }
        _append() {
          this._isAppended || (this._config.rootElement.appendChild(this._getElement()), I.on(this._getElement(), "mousedown.bs.backdrop", () => {
            _(this._config.clickCallback);
          }), this._isAppended = true);
        }
        dispose() {
          this._isAppended && (I.off(this._element, "mousedown.bs.backdrop"), this._getElement().parentNode.removeChild(this._element), this._isAppended = false);
        }
        _emulateAnimation(t2) {
          if (!this._config.isAnimated)
            return void _(t2);
          const e2 = s(this._getElement());
          I.one(this._getElement(), "transitionend", () => _(t2)), a(this._getElement(), e2);
        }
      }
      const Ce = { backdrop: true, keyboard: true, focus: true }, Se = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean" };
      class Ne extends M {
        constructor(t2, e2) {
          super(t2), this._config = this._getConfig(e2), this._dialog = U.findOne(".modal-dialog", this._element), this._backdrop = this._initializeBackDrop(), this._isShown = false, this._ignoreBackdropClick = false, this._isTransitioning = false;
        }
        static get Default() {
          return Ce;
        }
        static get DATA_KEY() {
          return "bs.modal";
        }
        toggle(t2) {
          return this._isShown ? this.hide() : this.show(t2);
        }
        show(t2) {
          if (this._isShown || this._isTransitioning)
            return;
          this._isAnimated() && (this._isTransitioning = true);
          const e2 = I.trigger(this._element, "show.bs.modal", { relatedTarget: t2 });
          this._isShown || e2.defaultPrevented || (this._isShown = true, Ee(), document.body.classList.add("modal-open"), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), I.on(this._element, "click.dismiss.bs.modal", '[data-bs-dismiss="modal"]', (t3) => this.hide(t3)), I.on(this._dialog, "mousedown.dismiss.bs.modal", () => {
            I.one(this._element, "mouseup.dismiss.bs.modal", (t3) => {
              t3.target === this._element && (this._ignoreBackdropClick = true);
            });
          }), this._showBackdrop(() => this._showElement(t2)));
        }
        hide(t2) {
          if (t2 && t2.preventDefault(), !this._isShown || this._isTransitioning)
            return;
          if (I.trigger(this._element, "hide.bs.modal").defaultPrevented)
            return;
          this._isShown = false;
          const e2 = this._isAnimated();
          if (e2 && (this._isTransitioning = true), this._setEscapeEvent(), this._setResizeEvent(), I.off(document, "focusin.bs.modal"), this._element.classList.remove("show"), I.off(this._element, "click.dismiss.bs.modal"), I.off(this._dialog, "mousedown.dismiss.bs.modal"), e2) {
            const t3 = s(this._element);
            I.one(this._element, "transitionend", (t4) => this._hideModal(t4)), a(this._element, t3);
          } else
            this._hideModal();
        }
        dispose() {
          [window, this._dialog].forEach((t2) => I.off(t2, ".bs.modal")), super.dispose(), I.off(document, "focusin.bs.modal"), this._config = null, this._dialog = null, this._backdrop.dispose(), this._backdrop = null, this._isShown = null, this._ignoreBackdropClick = null, this._isTransitioning = null;
        }
        handleUpdate() {
          this._adjustDialog();
        }
        _initializeBackDrop() {
          return new xe({ isVisible: Boolean(this._config.backdrop), isAnimated: this._isAnimated() });
        }
        _getConfig(t2) {
          return t2 = { ...Ce, ...z.getDataAttributes(this._element), ...t2 }, l("modal", t2, Se), t2;
        }
        _showElement(t2) {
          const e2 = this._isAnimated(), i2 = U.findOne(".modal-body", this._dialog);
          this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", true), this._element.setAttribute("role", "dialog"), this._element.scrollTop = 0, i2 && (i2.scrollTop = 0), e2 && f(this._element), this._element.classList.add("show"), this._config.focus && this._enforceFocus();
          const n2 = () => {
            this._config.focus && this._element.focus(), this._isTransitioning = false, I.trigger(this._element, "shown.bs.modal", { relatedTarget: t2 });
          };
          if (e2) {
            const t3 = s(this._dialog);
            I.one(this._dialog, "transitionend", n2), a(this._dialog, t3);
          } else
            n2();
        }
        _enforceFocus() {
          I.off(document, "focusin.bs.modal"), I.on(document, "focusin.bs.modal", (t2) => {
            document === t2.target || this._element === t2.target || this._element.contains(t2.target) || this._element.focus();
          });
        }
        _setEscapeEvent() {
          this._isShown ? I.on(this._element, "keydown.dismiss.bs.modal", (t2) => {
            this._config.keyboard && "Escape" === t2.key ? (t2.preventDefault(), this.hide()) : this._config.keyboard || "Escape" !== t2.key || this._triggerBackdropTransition();
          }) : I.off(this._element, "keydown.dismiss.bs.modal");
        }
        _setResizeEvent() {
          this._isShown ? I.on(window, "resize.bs.modal", () => this._adjustDialog()) : I.off(window, "resize.bs.modal");
        }
        _hideModal() {
          this._element.style.display = "none", this._element.setAttribute("aria-hidden", true), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._isTransitioning = false, this._backdrop.hide(() => {
            document.body.classList.remove("modal-open"), this._resetAdjustments(), Le(), I.trigger(this._element, "hidden.bs.modal");
          });
        }
        _showBackdrop(t2) {
          I.on(this._element, "click.dismiss.bs.modal", (t3) => {
            this._ignoreBackdropClick ? this._ignoreBackdropClick = false : t3.target === t3.currentTarget && (true === this._config.backdrop ? this.hide() : "static" === this._config.backdrop && this._triggerBackdropTransition());
          }), this._backdrop.show(t2);
        }
        _isAnimated() {
          return this._element.classList.contains("fade");
        }
        _triggerBackdropTransition() {
          if (I.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented)
            return;
          const t2 = this._element.scrollHeight > document.documentElement.clientHeight;
          t2 || (this._element.style.overflowY = "hidden"), this._element.classList.add("modal-static");
          const e2 = s(this._dialog);
          I.off(this._element, "transitionend"), I.one(this._element, "transitionend", () => {
            this._element.classList.remove("modal-static"), t2 || (I.one(this._element, "transitionend", () => {
              this._element.style.overflowY = "";
            }), a(this._element, e2));
          }), a(this._element, e2), this._element.focus();
        }
        _adjustDialog() {
          const t2 = this._element.scrollHeight > document.documentElement.clientHeight, e2 = we(), i2 = e2 > 0;
          (!i2 && t2 && !g() || i2 && !t2 && g()) && (this._element.style.paddingLeft = e2 + "px"), (i2 && !t2 && !g() || !i2 && t2 && g()) && (this._element.style.paddingRight = e2 + "px");
        }
        _resetAdjustments() {
          this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
        }
        static jQueryInterface(t2, e2) {
          return this.each(function() {
            const i2 = Ne.getInstance(this) || new Ne(this, "object" == typeof t2 ? t2 : {});
            if ("string" == typeof t2) {
              if (void 0 === i2[t2])
                throw new TypeError(`No method named "${t2}"`);
              i2[t2](e2);
            }
          });
        }
      }
      I.on(document, "click.bs.modal.data-api", '[data-bs-toggle="modal"]', function(t2) {
        const e2 = n(this);
        ["A", "AREA"].includes(this.tagName) && t2.preventDefault(), I.one(e2, "show.bs.modal", (t3) => {
          t3.defaultPrevented || I.one(e2, "hidden.bs.modal", () => {
            c(this) && this.focus();
          });
        }), (Ne.getInstance(e2) || new Ne(e2)).toggle(this);
      }), m("modal", Ne);
      const je = { backdrop: true, keyboard: true, scroll: false }, Pe = { backdrop: "boolean", keyboard: "boolean", scroll: "boolean" };
      class Ie extends M {
        constructor(t2, e2) {
          super(t2), this._config = this._getConfig(e2), this._isShown = false, this._backdrop = this._initializeBackDrop(), this._addEventListeners();
        }
        static get Default() {
          return je;
        }
        static get DATA_KEY() {
          return "bs.offcanvas";
        }
        toggle(t2) {
          return this._isShown ? this.hide() : this.show(t2);
        }
        show(t2) {
          if (this._isShown)
            return;
          if (I.trigger(this._element, "show.bs.offcanvas", { relatedTarget: t2 }).defaultPrevented)
            return;
          this._isShown = true, this._element.style.visibility = "visible", this._backdrop.show(), this._config.scroll || (Ee(), this._enforceFocusOnElement(this._element)), this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", true), this._element.setAttribute("role", "dialog"), this._element.classList.add("show");
          const e2 = s(this._element);
          I.one(this._element, "transitionend", () => {
            I.trigger(this._element, "shown.bs.offcanvas", { relatedTarget: t2 });
          }), a(this._element, e2);
        }
        hide() {
          if (!this._isShown)
            return;
          if (I.trigger(this._element, "hide.bs.offcanvas").defaultPrevented)
            return;
          I.off(document, "focusin.bs.offcanvas"), this._element.blur(), this._isShown = false, this._element.classList.remove("show"), this._backdrop.hide();
          const t2 = s(this._element);
          I.one(this._element, "transitionend", () => {
            this._element.setAttribute("aria-hidden", true), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._element.style.visibility = "hidden", this._config.scroll || Le(), I.trigger(this._element, "hidden.bs.offcanvas");
          }), a(this._element, t2);
        }
        dispose() {
          this._backdrop.dispose(), super.dispose(), I.off(document, "focusin.bs.offcanvas"), this._config = null, this._backdrop = null;
        }
        _getConfig(t2) {
          return t2 = { ...je, ...z.getDataAttributes(this._element), ..."object" == typeof t2 ? t2 : {} }, l("offcanvas", t2, Pe), t2;
        }
        _initializeBackDrop() {
          return new xe({ isVisible: this._config.backdrop, isAnimated: true, rootElement: this._element.parentNode, clickCallback: () => this.hide() });
        }
        _enforceFocusOnElement(t2) {
          I.off(document, "focusin.bs.offcanvas"), I.on(document, "focusin.bs.offcanvas", (e2) => {
            document === e2.target || t2 === e2.target || t2.contains(e2.target) || t2.focus();
          }), t2.focus();
        }
        _addEventListeners() {
          I.on(this._element, "click.dismiss.bs.offcanvas", '[data-bs-dismiss="offcanvas"]', () => this.hide()), I.on(this._element, "keydown.dismiss.bs.offcanvas", (t2) => {
            this._config.keyboard && "Escape" === t2.key && this.hide();
          });
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = v.get(this, "bs.offcanvas") || new Ie(this, "object" == typeof t2 ? t2 : {});
            if ("string" == typeof t2) {
              if (void 0 === e2[t2] || t2.startsWith("_") || "constructor" === t2)
                throw new TypeError(`No method named "${t2}"`);
              e2[t2](this);
            }
          });
        }
      }
      I.on(document, "click.bs.offcanvas.data-api", '[data-bs-toggle="offcanvas"]', function(t2) {
        const e2 = n(this);
        if (["A", "AREA"].includes(this.tagName) && t2.preventDefault(), d(this))
          return;
        I.one(e2, "hidden.bs.offcanvas", () => {
          c(this) && this.focus();
        });
        const i2 = U.findOne(".offcanvas.show");
        i2 && i2 !== e2 && Ie.getInstance(i2).hide(), (v.get(e2, "bs.offcanvas") || new Ie(e2)).toggle(this);
      }), I.on(window, "load.bs.offcanvas.data-api", () => {
        U.find(".offcanvas.show").forEach((t2) => (v.get(t2, "bs.offcanvas") || new Ie(t2)).show());
      }), m("offcanvas", Ie);
      const Me = /* @__PURE__ */ new Set(["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]), He = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/i, Re = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i, Be = (t2, e2) => {
        const i2 = t2.nodeName.toLowerCase();
        if (e2.includes(i2))
          return !Me.has(i2) || Boolean(He.test(t2.nodeValue) || Re.test(t2.nodeValue));
        const n2 = e2.filter((t3) => t3 instanceof RegExp);
        for (let t3 = 0, e3 = n2.length; t3 < e3; t3++)
          if (n2[t3].test(i2))
            return true;
        return false;
      };
      function We(t2, e2, i2) {
        if (!t2.length)
          return t2;
        if (i2 && "function" == typeof i2)
          return i2(t2);
        const n2 = new window.DOMParser().parseFromString(t2, "text/html"), s2 = Object.keys(e2), o2 = [].concat(...n2.body.querySelectorAll("*"));
        for (let t3 = 0, i3 = o2.length; t3 < i3; t3++) {
          const i4 = o2[t3], n3 = i4.nodeName.toLowerCase();
          if (!s2.includes(n3)) {
            i4.parentNode.removeChild(i4);
            continue;
          }
          const r2 = [].concat(...i4.attributes), a2 = [].concat(e2["*"] || [], e2[n3] || []);
          r2.forEach((t4) => {
            Be(t4, a2) || i4.removeAttribute(t4.nodeName);
          });
        }
        return n2.body.innerHTML;
      }
      const ze = new RegExp("(^|\\s)bs-tooltip\\S+", "g"), Ue = /* @__PURE__ */ new Set(["sanitize", "allowList", "sanitizeFn"]), $e = { animation: "boolean", template: "string", title: "(string|element|function)", trigger: "string", delay: "(number|object)", html: "boolean", selector: "(string|boolean)", placement: "(string|function)", offset: "(array|string|function)", container: "(string|element|boolean)", fallbackPlacements: "array", boundary: "(string|element)", customClass: "(string|function)", sanitize: "boolean", sanitizeFn: "(null|function)", allowList: "object", popperConfig: "(null|object|function)" }, Fe = { AUTO: "auto", TOP: "top", RIGHT: g() ? "left" : "right", BOTTOM: "bottom", LEFT: g() ? "right" : "left" }, Ke = { animation: true, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: false, selector: false, placement: "top", offset: [0, 0], container: false, fallbackPlacements: ["top", "right", "bottom", "left"], boundary: "clippingParents", customClass: "", sanitize: true, sanitizeFn: null, allowList: { "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "srcset", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }, popperConfig: null }, Ye = { HIDE: "hide.bs.tooltip", HIDDEN: "hidden.bs.tooltip", SHOW: "show.bs.tooltip", SHOWN: "shown.bs.tooltip", INSERTED: "inserted.bs.tooltip", CLICK: "click.bs.tooltip", FOCUSIN: "focusin.bs.tooltip", FOCUSOUT: "focusout.bs.tooltip", MOUSEENTER: "mouseenter.bs.tooltip", MOUSELEAVE: "mouseleave.bs.tooltip" };
      class qe extends M {
        constructor(t2, e2) {
          if (void 0 === de)
            throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");
          super(t2), this._isEnabled = true, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this.config = this._getConfig(e2), this.tip = null, this._setListeners();
        }
        static get Default() {
          return Ke;
        }
        static get NAME() {
          return "tooltip";
        }
        static get DATA_KEY() {
          return "bs.tooltip";
        }
        static get Event() {
          return Ye;
        }
        static get EVENT_KEY() {
          return ".bs.tooltip";
        }
        static get DefaultType() {
          return $e;
        }
        enable() {
          this._isEnabled = true;
        }
        disable() {
          this._isEnabled = false;
        }
        toggleEnabled() {
          this._isEnabled = !this._isEnabled;
        }
        toggle(t2) {
          if (this._isEnabled)
            if (t2) {
              const e2 = this._initializeOnDelegatedTarget(t2);
              e2._activeTrigger.click = !e2._activeTrigger.click, e2._isWithActiveTrigger() ? e2._enter(null, e2) : e2._leave(null, e2);
            } else {
              if (this.getTipElement().classList.contains("show"))
                return void this._leave(null, this);
              this._enter(null, this);
            }
        }
        dispose() {
          clearTimeout(this._timeout), I.off(this._element.closest(".modal"), "hide.bs.modal", this._hideModalHandler), this.tip && this.tip.parentNode && this.tip.parentNode.removeChild(this.tip), this._isEnabled = null, this._timeout = null, this._hoverState = null, this._activeTrigger = null, this._popper && this._popper.destroy(), this._popper = null, this.config = null, this.tip = null, super.dispose();
        }
        show() {
          if ("none" === this._element.style.display)
            throw new Error("Please use show on visible elements");
          if (!this.isWithContent() || !this._isEnabled)
            return;
          const e2 = I.trigger(this._element, this.constructor.Event.SHOW), i2 = h(this._element), n2 = null === i2 ? this._element.ownerDocument.documentElement.contains(this._element) : i2.contains(this._element);
          if (e2.defaultPrevented || !n2)
            return;
          const o2 = this.getTipElement(), r2 = t(this.constructor.NAME);
          o2.setAttribute("id", r2), this._element.setAttribute("aria-describedby", r2), this.setContent(), this.config.animation && o2.classList.add("fade");
          const l2 = "function" == typeof this.config.placement ? this.config.placement.call(this, o2, this._element) : this.config.placement, c2 = this._getAttachment(l2);
          this._addAttachmentClass(c2);
          const d2 = this._getContainer();
          v.set(o2, this.constructor.DATA_KEY, this), this._element.ownerDocument.documentElement.contains(this.tip) || (d2.appendChild(o2), I.trigger(this._element, this.constructor.Event.INSERTED)), this._popper ? this._popper.update() : this._popper = ce(this._element, o2, this._getPopperConfig(c2)), o2.classList.add("show");
          const f2 = "function" == typeof this.config.customClass ? this.config.customClass() : this.config.customClass;
          f2 && o2.classList.add(...f2.split(" ")), "ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t2) => {
            I.on(t2, "mouseover", u);
          });
          const p2 = () => {
            const t2 = this._hoverState;
            this._hoverState = null, I.trigger(this._element, this.constructor.Event.SHOWN), "out" === t2 && this._leave(null, this);
          };
          if (this.tip.classList.contains("fade")) {
            const t2 = s(this.tip);
            I.one(this.tip, "transitionend", p2), a(this.tip, t2);
          } else
            p2();
        }
        hide() {
          if (!this._popper)
            return;
          const t2 = this.getTipElement(), e2 = () => {
            this._isWithActiveTrigger() || ("show" !== this._hoverState && t2.parentNode && t2.parentNode.removeChild(t2), this._cleanTipClass(), this._element.removeAttribute("aria-describedby"), I.trigger(this._element, this.constructor.Event.HIDDEN), this._popper && (this._popper.destroy(), this._popper = null));
          };
          if (!I.trigger(this._element, this.constructor.Event.HIDE).defaultPrevented) {
            if (t2.classList.remove("show"), "ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t3) => I.off(t3, "mouseover", u)), this._activeTrigger.click = false, this._activeTrigger.focus = false, this._activeTrigger.hover = false, this.tip.classList.contains("fade")) {
              const i2 = s(t2);
              I.one(t2, "transitionend", e2), a(t2, i2);
            } else
              e2();
            this._hoverState = "";
          }
        }
        update() {
          null !== this._popper && this._popper.update();
        }
        isWithContent() {
          return Boolean(this.getTitle());
        }
        getTipElement() {
          if (this.tip)
            return this.tip;
          const t2 = document.createElement("div");
          return t2.innerHTML = this.config.template, this.tip = t2.children[0], this.tip;
        }
        setContent() {
          const t2 = this.getTipElement();
          this.setElementContent(U.findOne(".tooltip-inner", t2), this.getTitle()), t2.classList.remove("fade", "show");
        }
        setElementContent(t2, e2) {
          if (null !== t2)
            return "object" == typeof e2 && r(e2) ? (e2.jquery && (e2 = e2[0]), void (this.config.html ? e2.parentNode !== t2 && (t2.innerHTML = "", t2.appendChild(e2)) : t2.textContent = e2.textContent)) : void (this.config.html ? (this.config.sanitize && (e2 = We(e2, this.config.allowList, this.config.sanitizeFn)), t2.innerHTML = e2) : t2.textContent = e2);
        }
        getTitle() {
          let t2 = this._element.getAttribute("data-bs-original-title");
          return t2 || (t2 = "function" == typeof this.config.title ? this.config.title.call(this._element) : this.config.title), t2;
        }
        updateAttachment(t2) {
          return "right" === t2 ? "end" : "left" === t2 ? "start" : t2;
        }
        _initializeOnDelegatedTarget(t2, e2) {
          const i2 = this.constructor.DATA_KEY;
          return (e2 = e2 || v.get(t2.delegateTarget, i2)) || (e2 = new this.constructor(t2.delegateTarget, this._getDelegateConfig()), v.set(t2.delegateTarget, i2, e2)), e2;
        }
        _getOffset() {
          const { offset: t2 } = this.config;
          return "string" == typeof t2 ? t2.split(",").map((t3) => Number.parseInt(t3, 10)) : "function" == typeof t2 ? (e2) => t2(e2, this._element) : t2;
        }
        _getPopperConfig(t2) {
          const e2 = { placement: t2, modifiers: [{ name: "flip", options: { fallbackPlacements: this.config.fallbackPlacements } }, { name: "offset", options: { offset: this._getOffset() } }, { name: "preventOverflow", options: { boundary: this.config.boundary } }, { name: "arrow", options: { element: `.${this.constructor.NAME}-arrow` } }, { name: "onChange", enabled: true, phase: "afterWrite", fn: (t3) => this._handlePopperPlacementChange(t3) }], onFirstUpdate: (t3) => {
            t3.options.placement !== t3.placement && this._handlePopperPlacementChange(t3);
          } };
          return { ...e2, ..."function" == typeof this.config.popperConfig ? this.config.popperConfig(e2) : this.config.popperConfig };
        }
        _addAttachmentClass(t2) {
          this.getTipElement().classList.add("bs-tooltip-" + this.updateAttachment(t2));
        }
        _getContainer() {
          return false === this.config.container ? document.body : r(this.config.container) ? this.config.container : U.findOne(this.config.container);
        }
        _getAttachment(t2) {
          return Fe[t2.toUpperCase()];
        }
        _setListeners() {
          this.config.trigger.split(" ").forEach((t2) => {
            if ("click" === t2)
              I.on(this._element, this.constructor.Event.CLICK, this.config.selector, (t3) => this.toggle(t3));
            else if ("manual" !== t2) {
              const e2 = "hover" === t2 ? this.constructor.Event.MOUSEENTER : this.constructor.Event.FOCUSIN, i2 = "hover" === t2 ? this.constructor.Event.MOUSELEAVE : this.constructor.Event.FOCUSOUT;
              I.on(this._element, e2, this.config.selector, (t3) => this._enter(t3)), I.on(this._element, i2, this.config.selector, (t3) => this._leave(t3));
            }
          }), this._hideModalHandler = () => {
            this._element && this.hide();
          }, I.on(this._element.closest(".modal"), "hide.bs.modal", this._hideModalHandler), this.config.selector ? this.config = { ...this.config, trigger: "manual", selector: "" } : this._fixTitle();
        }
        _fixTitle() {
          const t2 = this._element.getAttribute("title"), e2 = typeof this._element.getAttribute("data-bs-original-title");
          (t2 || "string" !== e2) && (this._element.setAttribute("data-bs-original-title", t2 || ""), !t2 || this._element.getAttribute("aria-label") || this._element.textContent || this._element.setAttribute("aria-label", t2), this._element.setAttribute("title", ""));
        }
        _enter(t2, e2) {
          e2 = this._initializeOnDelegatedTarget(t2, e2), t2 && (e2._activeTrigger["focusin" === t2.type ? "focus" : "hover"] = true), e2.getTipElement().classList.contains("show") || "show" === e2._hoverState ? e2._hoverState = "show" : (clearTimeout(e2._timeout), e2._hoverState = "show", e2.config.delay && e2.config.delay.show ? e2._timeout = setTimeout(() => {
            "show" === e2._hoverState && e2.show();
          }, e2.config.delay.show) : e2.show());
        }
        _leave(t2, e2) {
          e2 = this._initializeOnDelegatedTarget(t2, e2), t2 && (e2._activeTrigger["focusout" === t2.type ? "focus" : "hover"] = e2._element.contains(t2.relatedTarget)), e2._isWithActiveTrigger() || (clearTimeout(e2._timeout), e2._hoverState = "out", e2.config.delay && e2.config.delay.hide ? e2._timeout = setTimeout(() => {
            "out" === e2._hoverState && e2.hide();
          }, e2.config.delay.hide) : e2.hide());
        }
        _isWithActiveTrigger() {
          for (const t2 in this._activeTrigger)
            if (this._activeTrigger[t2])
              return true;
          return false;
        }
        _getConfig(t2) {
          const e2 = z.getDataAttributes(this._element);
          return Object.keys(e2).forEach((t3) => {
            Ue.has(t3) && delete e2[t3];
          }), t2 && "object" == typeof t2.container && t2.container.jquery && (t2.container = t2.container[0]), "number" == typeof (t2 = { ...this.constructor.Default, ...e2, ..."object" == typeof t2 && t2 ? t2 : {} }).delay && (t2.delay = { show: t2.delay, hide: t2.delay }), "number" == typeof t2.title && (t2.title = t2.title.toString()), "number" == typeof t2.content && (t2.content = t2.content.toString()), l("tooltip", t2, this.constructor.DefaultType), t2.sanitize && (t2.template = We(t2.template, t2.allowList, t2.sanitizeFn)), t2;
        }
        _getDelegateConfig() {
          const t2 = {};
          if (this.config)
            for (const e2 in this.config)
              this.constructor.Default[e2] !== this.config[e2] && (t2[e2] = this.config[e2]);
          return t2;
        }
        _cleanTipClass() {
          const t2 = this.getTipElement(), e2 = t2.getAttribute("class").match(ze);
          null !== e2 && e2.length > 0 && e2.map((t3) => t3.trim()).forEach((e3) => t2.classList.remove(e3));
        }
        _handlePopperPlacementChange(t2) {
          const { state: e2 } = t2;
          e2 && (this.tip = e2.elements.popper, this._cleanTipClass(), this._addAttachmentClass(this._getAttachment(e2.placement)));
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            let e2 = v.get(this, "bs.tooltip");
            const i2 = "object" == typeof t2 && t2;
            if ((e2 || !/dispose|hide/.test(t2)) && (e2 || (e2 = new qe(this, i2)), "string" == typeof t2)) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2]();
            }
          });
        }
      }
      m("tooltip", qe);
      const Ve = new RegExp("(^|\\s)bs-popover\\S+", "g"), Xe = { ...qe.Default, placement: "right", offset: [0, 8], trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>' }, Qe = { ...qe.DefaultType, content: "(string|element|function)" }, Ge = { HIDE: "hide.bs.popover", HIDDEN: "hidden.bs.popover", SHOW: "show.bs.popover", SHOWN: "shown.bs.popover", INSERTED: "inserted.bs.popover", CLICK: "click.bs.popover", FOCUSIN: "focusin.bs.popover", FOCUSOUT: "focusout.bs.popover", MOUSEENTER: "mouseenter.bs.popover", MOUSELEAVE: "mouseleave.bs.popover" };
      class Ze extends qe {
        static get Default() {
          return Xe;
        }
        static get NAME() {
          return "popover";
        }
        static get DATA_KEY() {
          return "bs.popover";
        }
        static get Event() {
          return Ge;
        }
        static get EVENT_KEY() {
          return ".bs.popover";
        }
        static get DefaultType() {
          return Qe;
        }
        isWithContent() {
          return this.getTitle() || this._getContent();
        }
        setContent() {
          const t2 = this.getTipElement();
          this.setElementContent(U.findOne(".popover-header", t2), this.getTitle());
          let e2 = this._getContent();
          "function" == typeof e2 && (e2 = e2.call(this._element)), this.setElementContent(U.findOne(".popover-body", t2), e2), t2.classList.remove("fade", "show");
        }
        _addAttachmentClass(t2) {
          this.getTipElement().classList.add("bs-popover-" + this.updateAttachment(t2));
        }
        _getContent() {
          return this._element.getAttribute("data-bs-content") || this.config.content;
        }
        _cleanTipClass() {
          const t2 = this.getTipElement(), e2 = t2.getAttribute("class").match(Ve);
          null !== e2 && e2.length > 0 && e2.map((t3) => t3.trim()).forEach((e3) => t2.classList.remove(e3));
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            let e2 = v.get(this, "bs.popover");
            const i2 = "object" == typeof t2 ? t2 : null;
            if ((e2 || !/dispose|hide/.test(t2)) && (e2 || (e2 = new Ze(this, i2), v.set(this, "bs.popover", e2)), "string" == typeof t2)) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2]();
            }
          });
        }
      }
      m("popover", Ze);
      const Je = { offset: 10, method: "auto", target: "" }, ti = { offset: "number", method: "string", target: "(string|element)" };
      class ei extends M {
        constructor(t2, e2) {
          super(t2), this._scrollElement = "BODY" === this._element.tagName ? window : this._element, this._config = this._getConfig(e2), this._selector = `${this._config.target} .nav-link, ${this._config.target} .list-group-item, ${this._config.target} .dropdown-item`, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, I.on(this._scrollElement, "scroll.bs.scrollspy", () => this._process()), this.refresh(), this._process();
        }
        static get Default() {
          return Je;
        }
        static get DATA_KEY() {
          return "bs.scrollspy";
        }
        refresh() {
          const t2 = this._scrollElement === this._scrollElement.window ? "offset" : "position", e2 = "auto" === this._config.method ? t2 : this._config.method, n2 = "position" === e2 ? this._getScrollTop() : 0;
          this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), U.find(this._selector).map((t3) => {
            const s2 = i(t3), o2 = s2 ? U.findOne(s2) : null;
            if (o2) {
              const t4 = o2.getBoundingClientRect();
              if (t4.width || t4.height)
                return [z[e2](o2).top + n2, s2];
            }
            return null;
          }).filter((t3) => t3).sort((t3, e3) => t3[0] - e3[0]).forEach((t3) => {
            this._offsets.push(t3[0]), this._targets.push(t3[1]);
          });
        }
        dispose() {
          super.dispose(), I.off(this._scrollElement, ".bs.scrollspy"), this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null;
        }
        _getConfig(e2) {
          if ("string" != typeof (e2 = { ...Je, ...z.getDataAttributes(this._element), ..."object" == typeof e2 && e2 ? e2 : {} }).target && r(e2.target)) {
            let { id: i2 } = e2.target;
            i2 || (i2 = t("scrollspy"), e2.target.id = i2), e2.target = "#" + i2;
          }
          return l("scrollspy", e2, ti), e2;
        }
        _getScrollTop() {
          return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
        }
        _getScrollHeight() {
          return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
        }
        _getOffsetHeight() {
          return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
        }
        _process() {
          const t2 = this._getScrollTop() + this._config.offset, e2 = this._getScrollHeight(), i2 = this._config.offset + e2 - this._getOffsetHeight();
          if (this._scrollHeight !== e2 && this.refresh(), t2 >= i2) {
            const t3 = this._targets[this._targets.length - 1];
            this._activeTarget !== t3 && this._activate(t3);
          } else {
            if (this._activeTarget && t2 < this._offsets[0] && this._offsets[0] > 0)
              return this._activeTarget = null, void this._clear();
            for (let e3 = this._offsets.length; e3--; )
              this._activeTarget !== this._targets[e3] && t2 >= this._offsets[e3] && (void 0 === this._offsets[e3 + 1] || t2 < this._offsets[e3 + 1]) && this._activate(this._targets[e3]);
          }
        }
        _activate(t2) {
          this._activeTarget = t2, this._clear();
          const e2 = this._selector.split(",").map((e3) => `${e3}[data-bs-target="${t2}"],${e3}[href="${t2}"]`), i2 = U.findOne(e2.join(","));
          i2.classList.contains("dropdown-item") ? (U.findOne(".dropdown-toggle", i2.closest(".dropdown")).classList.add("active"), i2.classList.add("active")) : (i2.classList.add("active"), U.parents(i2, ".nav, .list-group").forEach((t3) => {
            U.prev(t3, ".nav-link, .list-group-item").forEach((t4) => t4.classList.add("active")), U.prev(t3, ".nav-item").forEach((t4) => {
              U.children(t4, ".nav-link").forEach((t5) => t5.classList.add("active"));
            });
          })), I.trigger(this._scrollElement, "activate.bs.scrollspy", { relatedTarget: t2 });
        }
        _clear() {
          U.find(this._selector).filter((t2) => t2.classList.contains("active")).forEach((t2) => t2.classList.remove("active"));
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = ei.getInstance(this) || new ei(this, "object" == typeof t2 ? t2 : {});
            if ("string" == typeof t2) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2]();
            }
          });
        }
      }
      I.on(window, "load.bs.scrollspy.data-api", () => {
        U.find('[data-bs-spy="scroll"]').forEach((t2) => new ei(t2));
      }), m("scrollspy", ei);
      class ii extends M {
        static get DATA_KEY() {
          return "bs.tab";
        }
        show() {
          if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && this._element.classList.contains("active"))
            return;
          let t2;
          const e2 = n(this._element), i2 = this._element.closest(".nav, .list-group");
          if (i2) {
            const e3 = "UL" === i2.nodeName || "OL" === i2.nodeName ? ":scope > li > .active" : ".active";
            t2 = U.find(e3, i2), t2 = t2[t2.length - 1];
          }
          const s2 = t2 ? I.trigger(t2, "hide.bs.tab", { relatedTarget: this._element }) : null;
          if (I.trigger(this._element, "show.bs.tab", { relatedTarget: t2 }).defaultPrevented || null !== s2 && s2.defaultPrevented)
            return;
          this._activate(this._element, i2);
          const o2 = () => {
            I.trigger(t2, "hidden.bs.tab", { relatedTarget: this._element }), I.trigger(this._element, "shown.bs.tab", { relatedTarget: t2 });
          };
          e2 ? this._activate(e2, e2.parentNode, o2) : o2();
        }
        _activate(t2, e2, i2) {
          const n2 = (!e2 || "UL" !== e2.nodeName && "OL" !== e2.nodeName ? U.children(e2, ".active") : U.find(":scope > li > .active", e2))[0], o2 = i2 && n2 && n2.classList.contains("fade"), r2 = () => this._transitionComplete(t2, n2, i2);
          if (n2 && o2) {
            const t3 = s(n2);
            n2.classList.remove("show"), I.one(n2, "transitionend", r2), a(n2, t3);
          } else
            r2();
        }
        _transitionComplete(t2, e2, i2) {
          if (e2) {
            e2.classList.remove("active");
            const t3 = U.findOne(":scope > .dropdown-menu .active", e2.parentNode);
            t3 && t3.classList.remove("active"), "tab" === e2.getAttribute("role") && e2.setAttribute("aria-selected", false);
          }
          t2.classList.add("active"), "tab" === t2.getAttribute("role") && t2.setAttribute("aria-selected", true), f(t2), t2.classList.contains("fade") && t2.classList.add("show");
          let n2 = t2.parentNode;
          if (n2 && "LI" === n2.nodeName && (n2 = n2.parentNode), n2 && n2.classList.contains("dropdown-menu")) {
            const e3 = t2.closest(".dropdown");
            e3 && U.find(".dropdown-toggle", e3).forEach((t3) => t3.classList.add("active")), t2.setAttribute("aria-expanded", true);
          }
          i2 && i2();
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = v.get(this, "bs.tab") || new ii(this);
            if ("string" == typeof t2) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2]();
            }
          });
        }
      }
      I.on(document, "click.bs.tab.data-api", '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]', function(t2) {
        ["A", "AREA"].includes(this.tagName) && t2.preventDefault(), d(this) || (v.get(this, "bs.tab") || new ii(this)).show();
      }), m("tab", ii);
      const ni = { animation: "boolean", autohide: "boolean", delay: "number" }, si = { animation: true, autohide: true, delay: 5e3 };
      class oi extends M {
        constructor(t2, e2) {
          super(t2), this._config = this._getConfig(e2), this._timeout = null, this._setListeners();
        }
        static get DefaultType() {
          return ni;
        }
        static get Default() {
          return si;
        }
        static get DATA_KEY() {
          return "bs.toast";
        }
        show() {
          if (I.trigger(this._element, "show.bs.toast").defaultPrevented)
            return;
          this._clearTimeout(), this._config.animation && this._element.classList.add("fade");
          const t2 = () => {
            this._element.classList.remove("showing"), this._element.classList.add("show"), I.trigger(this._element, "shown.bs.toast"), this._config.autohide && (this._timeout = setTimeout(() => {
              this.hide();
            }, this._config.delay));
          };
          if (this._element.classList.remove("hide"), f(this._element), this._element.classList.add("showing"), this._config.animation) {
            const e2 = s(this._element);
            I.one(this._element, "transitionend", t2), a(this._element, e2);
          } else
            t2();
        }
        hide() {
          if (!this._element.classList.contains("show"))
            return;
          if (I.trigger(this._element, "hide.bs.toast").defaultPrevented)
            return;
          const t2 = () => {
            this._element.classList.add("hide"), I.trigger(this._element, "hidden.bs.toast");
          };
          if (this._element.classList.remove("show"), this._config.animation) {
            const e2 = s(this._element);
            I.one(this._element, "transitionend", t2), a(this._element, e2);
          } else
            t2();
        }
        dispose() {
          this._clearTimeout(), this._element.classList.contains("show") && this._element.classList.remove("show"), super.dispose(), this._config = null;
        }
        _getConfig(t2) {
          return t2 = { ...si, ...z.getDataAttributes(this._element), ..."object" == typeof t2 && t2 ? t2 : {} }, l("toast", t2, this.constructor.DefaultType), t2;
        }
        _setListeners() {
          I.on(this._element, "click.dismiss.bs.toast", '[data-bs-dismiss="toast"]', () => this.hide());
        }
        _clearTimeout() {
          clearTimeout(this._timeout), this._timeout = null;
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            let e2 = v.get(this, "bs.toast");
            if (e2 || (e2 = new oi(this, "object" == typeof t2 && t2)), "string" == typeof t2) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2](this);
            }
          });
        }
      }
      return m("toast", oi), { Alert: H, Button: R, Carousel: X, Collapse: Z, Dropdown: ye, Modal: Ne, Offcanvas: Ie, Popover: Ze, ScrollSpy: ei, Tab: ii, Toast: oi, Tooltip: qe };
    });
  }
});
export default require_bootstrap_bundle_min();
/*! Bundled license information:

bootstrap/dist/js/bootstrap.bundle.min.js:
  (*!
    * Bootstrap v5.0.0 (https://getbootstrap.com/)
    * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
    *)
*/
//# sourceMappingURL=bootstrap_dist_js_bootstrap__bundle__min__js.js.map
